<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: consul | さよならインターネット]]></title>
  <link href="http://kenjiskywalker.github.com/kenjiskywalker/blog/categories/consul/atom.xml" rel="self"/>
  <link href="http://kenjiskywalker.github.com/kenjiskywalker/"/>
  <updated>2014-12-07T05:52:04+09:00</updated>
  <id>http://kenjiskywalker.github.com/kenjiskywalker/</id>
  <author>
    <name><![CDATA[kenjiskywalker]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Consulでkey/valueを叩く]]></title>
    <link href="http://kenjiskywalker.github.com/kenjiskywalker/blog/2014/09/09/consul-key-value/"/>
    <updated>2014-09-09T23:09:00+09:00</updated>
    <id>http://kenjiskywalker.github.com/kenjiskywalker/blog/2014/09/09/consul-key-value</id>
    <content type="html"><![CDATA[<h2>TL;DR</h2>

<p>Consulでkey/valueを叩く</p>

<p>```
['-']% curl -X PUT -d 'bar' http://127.0.0.1:8500/v1/kv/foo
true
['-']%
['-']%
['-']% curl -s http://127.0.0.1:8500/v1/kv/foo | jq .
[
  {</p>

<pre><code>"CreateIndex": 538,
"ModifyIndex": 538,
"LockIndex": 0,
"Key": "foo",
"Flags": 0,
"Value": "YmFy"
</code></pre>

<p>  }
]
['-']%
['-']% curl -s http://127.0.0.2:8500/v1/kv/foo | jq .
[
  {</p>

<pre><code>"CreateIndex": 538,
"ModifyIndex": 538,
"LockIndex": 0,
"Key": "foo",
"Flags": 0,
"Value": "YmFy"
</code></pre>

<p>  }
]
['-']%
['-']% curl -X PUT -d 'barbar' http://127.0.0.2:8500/v1/kv/foofoo
true
['-']%
['-']% curl -s http://127.0.0.1:8500/v1/kv/foofoo | jq .
[
  {</p>

<pre><code>"CreateIndex": 540,
"ModifyIndex": 540,
"LockIndex": 0,
"Key": "foofoo",
"Flags": 0,
"Value": "YmFyYmFy"
</code></pre>

<p>  }
]
['-']%
['-']%
```</p>

<h3>delete</h3>

<p><code>
['-']%
['-']% curl -X DELETE -d 'barbar' http://127.0.0.2:8500/v1/kv/foofoo
['-']%
['-']%
['-']% curl -s http://127.0.0.1:8500/v1/kv/foofoo | jq .
['-']%
['-']%
['-']% curl -X PUT -d 'barbar' http://127.0.0.2:8500/v1/kv/foofoo
true%                                                                                                  ['-']%
['-']%
['-']%
</code></p>

<h3>再帰もいける</h3>

<p>```
['-']% curl -s 'http://127.0.0.1:8500/v1/kv/?recurse' | jq .
[
  {</p>

<pre><code>"CreateIndex": 555,
"ModifyIndex": 555,
"LockIndex": 0,
"Key": "foofoo",
"Flags": 0,
"Value": "YmFyYmFy"
</code></pre>

<p>  },
  {</p>

<pre><code>"CreateIndex": 538,
"ModifyIndex": 538,
"LockIndex": 0,
"Key": "foo",
"Flags": 0,
"Value": "YmFy"
</code></pre>

<p>  }
]
['-']%
```</p>

<h3>flags</h3>

<p>```
['-']%
['-']% curl -s http://127.0.0.2:8500/v1/kv/foofoo | jq .
[
  {</p>

<pre><code>"CreateIndex": 555,
"ModifyIndex": 559,
"LockIndex": 0,
"Key": "foofoo",
"Flags": 0,
"Value": null
</code></pre>

<p>  }
]
['-']%
['-']% curl -X PUT 'barbar' -s 'http://127.0.0.1:8500/v1/kv/foofoo?flags=1' | jq .
true
['-']%
['-']% curl -s http://127.0.0.2:8500/v1/kv/foofoo | jq .
[
  {</p>

<pre><code>"CreateIndex": 555,
"ModifyIndex": 560,
"LockIndex": 0,
"Key": "foofoo",
"Flags": 1,
"Value": null
</code></pre>

<p>  }
]
['-']%
```</p>

<h3>階層化とdecode</h3>

<blockquote><p>BSD の base64 コマンドだと<br/>
-dがdebugで-Dがdecodeだった</p></blockquote>

<p><code>
['-']% curl -X PUT -d 'bazbazbaz' -s 'http://127.0.0.1:8500/v1/kv/foo/bar/baz'
true
['x']%
['x']% curl -s 'http://127.0.0.1:8500/v1/kv/foo/bar/baz' | jq '.[]'
{
  "CreateIndex": 565,
  "ModifyIndex": 568,
  "LockIndex": 0,
  "Key": "foo/bar/baz",
  "Flags": 0,
  "Value": "YmF6YmF6YmF6"
}
['-']%
['-']%
['-']% curl -s 'http://127.0.0.1:8500/v1/kv/foo/bar/baz' | jq '.[].Value' -r | base64 -D
bazbazbaz
['-']%
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Consulでnodeの増減時に特定のスクリプトを実行させる]]></title>
    <link href="http://kenjiskywalker.github.com/kenjiskywalker/blog/2014/09/09/consul-event-handle-watches/"/>
    <updated>2014-09-09T22:21:00+09:00</updated>
    <id>http://kenjiskywalker.github.com/kenjiskywalker/blog/2014/09/09/consul-event-handle-watches</id>
    <content type="html"><![CDATA[<h2>TL;DR</h2>

<p>ConsulでSerfのEvent Handlerのようなものを試したメモ</p>

<h2>main</h2>

<p>Consulの<a href="https://www.hashicorp.com/blog/consul-0-4.html">0.4</a>から<code>Watches</code>という機能が追加されて<br/>
Serfのevent handlerのようなことができるようになった。</p>

<p>昨日つくった<a href="https://github.com/kenjiskywalker/consul-test">consul-test</a>に</p>

<ul>
<li>node01/config.json</li>
</ul>


<p>```
{
  "node_name": "node01",
  "data_dir": "./node01/",
  "bind_addr": "127.0.0.1",
  "client_addr": "127.0.0.1",
  "ui_dir": "./dist/",
  "watches": [</p>

<pre><code>{
  "type": "nodes",
  "handler": "./node01/hosts_update.rb"
}
</code></pre>

<p>  ]
}
```</p>

<p>watchesの設定を追加してみた。</p>

<p><code>hosts_update.rb</code>でやっていることはシンプルで<br/>
nodesに変化があった場合に、標準入力でnodesの情報を取得し、<br/>
同ディレクトリに<code>_hosts</code>ファイルを生成して、<br/>
nodeの名前とそのAddressを<br/>
hostsファイルに似せて出力するようにしている。</p>

<blockquote><p>Consulには<code>SERF_EVENT</code>のような<br/>
管理しているnodeの変化の状態をSTDINで受け取る方法はないのだろうか</p></blockquote>

<h2>雑談</h2>

<p>このような簡単なスクリプトはGoで書いてもいいかもしれないけど<br/>
バイナリだけ置いてあるような状態の時に<br/>
<em>作成者を全面的に信用する</em>みたいな部活っぽい対応になりそう。<br/>
簡易スクリプトをGoで書いたらバイナリとそのソースファイルを<br/>
同ディレクトリに置いておくとかが良いんだろうか。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Consul Clusterを手元に構築する簡単なスクリプトかいた]]></title>
    <link href="http://kenjiskywalker.github.com/kenjiskywalker/blog/2014/09/08/consul-test-tool/"/>
    <updated>2014-09-08T21:01:00+09:00</updated>
    <id>http://kenjiskywalker.github.com/kenjiskywalker/blog/2014/09/08/consul-test-tool</id>
    <content type="html"><![CDATA[<h2><a href="https://github.com/kenjiskywalker/consul-test">https://github.com/kenjiskywalker/consul-test</a></h2>

<p>READMEのとおりですが</p>

<p><code>
Node    Address         Status  Type    Build  Protocol
node01  127.0.0.1:8301  alive   server  0.4.0  2
node02  127.0.0.2:8301  alive   server  0.4.0  2
node03  127.0.0.3:8301  alive   server  0.4.0  2
node04  127.0.0.4:8301  alive   client  0.4.0  2
</code></p>

<p>上記構成のConsul Clusterを<br/>
OS X上に簡単に作成できるスクリプトをつくりましたので<br/>
よかったらご利用ください。</p>

<h3>あわせてよみたい</h3>

<p><a href="http://blog.kenjiskywalker.org/blog/2014/06/06/consul-dns-round-robin/">ConsulのDNSラウンドロビンの検証</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ConsulのDNSラウンドロビンの検証]]></title>
    <link href="http://kenjiskywalker.github.com/kenjiskywalker/blog/2014/06/06/consul-dns-round-robin+%28nightskywalker%27s+conflicted+copy+2014-09-10%29/"/>
    <updated>2014-06-06T01:13:00+09:00</updated>
    <id>http://kenjiskywalker.github.com/kenjiskywalker/blog/2014/06/06/consul-dns-round-robin (nightskywalker's conflicted copy 2014-09-10)</id>
    <content type="html"><![CDATA[<p><a href="http://www.hashicorp.com/blog/consul.html">Consul - hashicorp</a> を利用しDNS Failoverを検証した</p>

<blockquote><p>Consul v0.2.0</p></blockquote>

<h2>TL;DR</h2>

<p>hostnameやserviceなどでDNSを設定し<br/>
DNSはnodeの死活監視によって動的に生まれ死んでいく。<br/>
nodeとは別にserviceという概念があり、DNSラウンドロビンが行える</p>

<h2>loopback alias</h2>

<p>@keita氏に教えてもらった<br/>
<a href="http://astralbodi.es/2011/02/04/mac-os-x-adding-a-loopback-alias/">Mac OS X – Adding a loopback alias - THE DANGLING POINTER</a></p>

<p>このloopbackのaliasが大変役に立った。</p>

<h2>nodeの用意</h2>

<ul>
<li>127.0.0.1(node01)</li>
<li>127.0.0.2(node02)</li>
<li>127.0.0.3(node03)</li>
</ul>


<p><code>
$ ifconfig lo0 alias 127.0.0.2
$ ifconfig lo0 alias 127.0.0.3
</code></p>

<h2>設定ファイルのディレクトリの用意</h2>

<p><code>
$ mkdir ./node01
$ mkdir ./node02
$ mkdir ./node03
</code></p>

<h2>設定ファイルの作成</h2>

<ul>
<li>node01/config.json</li>
</ul>


<p>Web UI用のデータは<a href="http://www.consul.io/intro/getting-started/ui.html">ここ</a>からダウンロードして<br/>
<code>ui_dir</code>にて指定してディレクトリへ配置する。</p>

<p><code>
{
  "node_name": "node01",
  "data_dir": "./node01/",
  "bind_addr": "127.0.0.1",
  "client_addr": "127.0.0.1",
  "ui_dir": "./node01/",
  "domain": "foo",
  "bootstrap": true,
  "server": true
}
</code></p>

<ul>
<li>node01/check.json</li>
</ul>


<p>```
{
  "service": {</p>

<pre><code>  "name": "echo",
  "tags": ["master"],
  "check": {
      "script": "echo 'hello'",
      "interval": "10s"
  }
</code></pre>

<p>  }
}
```</p>

<ul>
<li>node02/config.json</li>
</ul>


<p><code>
{
  "node_name": "node02",
  "data_dir": "./node02/",
  "bind_addr": "127.0.0.2",
  "client_addr": "127.0.0.2",
  "ui_dir": "./node02/",
  "domain": "foo",
  "bootstrap": true,
  "server": true
}
</code></p>

<ul>
<li>node02/check.json</li>
</ul>


<p>```
{
  "service": {</p>

<pre><code>  "name": "echo",
  "tags": ["slave"],
  "check": {
      "script": "echo 'hello'",
      "interval": "10s"
  }
</code></pre>

<p>  }
}
```</p>

<ul>
<li>node03/config.json</li>
</ul>


<p><code>
{
  "node_name": "node03",
  "data_dir": "./node03/",
  "bind_addr": "127.0.0.3",
  "client_addr": "127.0.0.3",
  "ui_dir": "./node03/",
  "domain": "foo",
  "bootstrap": true,
  "server": true
}
</code></p>

<ul>
<li>node03/check.json</li>
</ul>


<p>```
{
  "service": {</p>

<pre><code>  "name": "echo",
  "tags": ["slave"],
  "check": {
      "script": "echo 'hello'",
      "interval": "10s"
  }
</code></pre>

<p>  }
}
```</p>

<h2>nodeの起動</h2>

<p><code>
$ sudo consul agent -config-dir node01
$ sudo consul agent -config-dir node02
$ sudo consul agent -config-dir node03
</code></p>

<h2>名前解決をしてみる</h2>

<ul>
<li>node01</li>
</ul>


<p>```
$ dig @127.0.0.1 -p 8600 node01.node.foo. ANY</p>

<p>; &lt;&lt;>> DiG 9.8.3-P1 &lt;&lt;>> @127.0.0.1 -p 8600 node01.node.foo. ANY
; (1 server found)
;; global options: +cmd
;; Got answer:
;; ->>HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 3750
;; flags: qr aa rd; QUERY: 1, ANSWER: 3, AUTHORITY: 0, ADDITIONAL: 0
;; WARNING: recursion requested but not available</p>

<p>;; QUESTION SECTION:
;node01.node.foo.         IN      ANY</p>

<p>;; ANSWER SECTION:
node01.node.foo.  0       IN      A       127.0.0.1</p>

<p>;; Query time: 6 msec
;; SERVER: 127.0.0.1#8600(127.0.0.1)
;; WHEN: Fri Jun  6 01:36:37 2014
;; MSG SIZE  rcvd: 150</p>

<p>$
```</p>

<ul>
<li>node02</li>
</ul>


<p>```
$ dig @127.0.0.1 -p 8600 node02.node.foo. ANY</p>

<p>; &lt;&lt;>> DiG 9.8.3-P1 &lt;&lt;>> @127.0.0.1 -p 8600 node02.node.foo. ANY
; (1 server found)
;; global options: +cmd
;; Got answer:
;; ->>HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 3750
;; flags: qr aa rd; QUERY: 1, ANSWER: 3, AUTHORITY: 0, ADDITIONAL: 0
;; WARNING: recursion requested but not available</p>

<p>;; QUESTION SECTION:
;node02.node.foo.         IN      ANY</p>

<p>;; ANSWER SECTION:
node02.node.foo.  0       IN      A       127.0.0.2</p>

<p>;; Query time: 6 msec
;; SERVER: 127.0.0.1#8600(127.0.0.1)
;; WHEN: Fri Jun  6 01:36:37 2014
;; MSG SIZE  rcvd: 150</p>

<p>$
```</p>

<ul>
<li>service</li>
</ul>


<p>```
$ dig @127.0.0.1 -p 8600 echo.service.foo. ANY</p>

<p>; &lt;&lt;>> DiG 9.8.3-P1 &lt;&lt;>> @127.0.0.1 -p 8600 echo.service.foo. ANY
; (1 server found)
;; global options: +cmd
;; Got answer:
;; ->>HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 3750
;; flags: qr aa rd; QUERY: 1, ANSWER: 3, AUTHORITY: 0, ADDITIONAL: 0
;; WARNING: recursion requested but not available</p>

<p>;; QUESTION SECTION:
;echo.service.foo.         IN      ANY</p>

<p>;; ANSWER SECTION:
echo.service.foo.  0       IN      A       127.0.0.1
echo.service.foo.  0       IN      A       127.0.0.2
echo.service.foo.  0       IN      A       127.0.0.3</p>

<p>;; Query time: 6 msec
;; SERVER: 127.0.0.1#8600(127.0.0.1)
;; WHEN: Fri Jun  6 01:36:37 2014
;; MSG SIZE  rcvd: 150</p>

<p>$
```</p>

<ul>
<li>service(master)</li>
</ul>


<p>```
$ dig @127.0.0.1 -p 8600 master.echo.service.foo. ANY</p>

<p>; &lt;&lt;>> DiG 9.8.3-P1 &lt;&lt;>> @127.0.0.1 -p 8600 master.echo.service.foo. ANY
; (1 server found)
;; global options: +cmd
;; Got answer:
;; ->>HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 3750
;; flags: qr aa rd; QUERY: 1, ANSWER: 3, AUTHORITY: 0, ADDITIONAL: 0
;; WARNING: recursion requested but not available</p>

<p>;; QUESTION SECTION:
;master.echo.service.foo.         IN      ANY</p>

<p>;; ANSWER SECTION:
master.echo.service.foo.  0       IN      A       127.0.0.1</p>

<p>;; Query time: 6 msec
;; SERVER: 127.0.0.1#8600(127.0.0.1)
;; WHEN: Fri Jun  6 01:36:37 2014
;; MSG SIZE  rcvd: 150</p>

<p>$
```</p>

<ul>
<li>service(slave)</li>
</ul>


<p>```
$ dig @127.0.0.1 -p 8600 slave.echo.service.foo. ANY</p>

<p>; &lt;&lt;>> DiG 9.8.3-P1 &lt;&lt;>> @127.0.0.1 -p 8600 slave.echo.service.foo. ANY
; (1 server found)
;; global options: +cmd
;; Got answer:
;; ->>HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 3750
;; flags: qr aa rd; QUERY: 1, ANSWER: 3, AUTHORITY: 0, ADDITIONAL: 0
;; WARNING: recursion requested but not available</p>

<p>;; QUESTION SECTION:
;slave.echo.service.foo.         IN      ANY</p>

<p>;; ANSWER SECTION:
slave.echo.service.foo.  0       IN      A       127.0.0.2
slave.echo.service.foo.  0       IN      A       127.0.0.3</p>

<p>;; Query time: 6 msec
;; SERVER: 127.0.0.1#8600(127.0.0.1)
;; WHEN: Fri Jun  6 01:36:37 2014
;; MSG SIZE  rcvd: 150</p>

<p>$
```</p>

<h2>機能毎のメモ</h2>

<ul>
<li>bootstrapは最初の1台</li>
<li>serverは3~5台ぐらいあったらいい</li>
<li>nodeの名前は各nodeで設定される</li>
<li>serviceは複数設定が可能。DNS Round Robinが行える</li>
<li><em>tag</em> を設定することでサブドメインが利用可能になる</li>
<li>不要なホスト消す (curl -H "Content-Type: application/json" -d '{"Datacenter": "DATACENTER", "Node": "NODENAME"}' http://localhost:8500/v1/catalog/deregister)</li>
</ul>


<p>以上、メモになります。</p>
]]></content>
  </entry>
  
</feed>
