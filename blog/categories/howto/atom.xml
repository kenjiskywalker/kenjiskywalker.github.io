<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: howto | さよならインターネット]]></title>
  <link href="http://kenjiskywalker.github.com/kenjiskywalker/blog/categories/howto/atom.xml" rel="self"/>
  <link href="http://kenjiskywalker.github.com/kenjiskywalker/"/>
  <updated>2014-12-08T21:26:25+09:00</updated>
  <id>http://kenjiskywalker.github.com/kenjiskywalker/</id>
  <author>
    <name><![CDATA[kenjiskywalker]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[shellscriptでmailコマンドを利用してGmailにメールを送るとnonameという添付ファイルが添付される問題]]></title>
    <link href="http://kenjiskywalker.github.com/kenjiskywalker/blog/2014/06/04/gmail-noname/"/>
    <updated>2014-06-04T02:56:00+09:00</updated>
    <id>http://kenjiskywalker.github.com/kenjiskywalker/blog/2014/06/04/gmail-noname</id>
    <content type="html"><![CDATA[<pre><code>#!/bin/bash

FOO=`command`

echo ${FOO} | mail -s "foo command dayo" foo@example.com
</code></pre>

<p>のようなスクリプトを作成した時に、送信先である<br/>
Gmailで受信すると本文にコマンドの結果が出力されるのではなく<br/>
nonameという添付ファイルが送られてきた。</p>

<p>原因はコマンドの結果にEscape Sequenceが入っていたため<br/>
文字コードを上手く認識できなかったようだ。</p>

<p>Escape Sequenceとかガッツリやったことがなくて<br/>
IRCに色付けたりターミナルの文字列に色付けたりするぐらいしか<br/>
使ったことがなくて、原因が特定できなかった。</p>

<p>@keitap氏は一撃でEscape Sequenceだってわかった。<br/>
対応としては</p>

<p><a href="http://d.hatena.ne.jp/hogem/20100320/1269132856">colでエスケープシーケンスを除去 - うまい棒blog</a></p>

<p>hogemさんが書いてくれたように<code>\</code>を除外するとかして<br/>
Escape Sequenceとして認識させないようにして上手くいった。</p>

<pre><code>#!/bin/bash

FOO=`command`

echo ${FOO} | col -b | mail -s "foo command dayo" foo@example.com
</code></pre>

<p>こちらからは以上です。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu 13.10でOMRONのUPS BY35Sを使う]]></title>
    <link href="http://kenjiskywalker.github.com/kenjiskywalker/blog/2014/02/02/ups-omron-nut/"/>
    <updated>2014-02-02T11:53:00+09:00</updated>
    <id>http://kenjiskywalker.github.com/kenjiskywalker/blog/2014/02/02/ups-omron-nut</id>
    <content type="html"><![CDATA[<blockquote><p>Ubuntu 13.04
nut        2.6.4-2.2ubuntu1<br/>
nut-client 2.6.4-2.2ubuntu1<br/>
nut-server 2.6.4-2.2ubuntu1</p></blockquote>

<p><a href="http://www.amazon.co.jp/gp/product/B002UQFAPW/ref=as_li_ss_il?ie=UTF8&camp=247&creative=7399&creativeASIN=B002UQFAPW&linkCode=as2&tag=13nightcrows-22"><img border="0" src="http://ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&ASIN=B002UQFAPW&Format=_SL110_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=13nightcrows-22" ></a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=13nightcrows-22&l=as2&o=9&a=B002UQFAPW" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></p>

<p><a href="http://d.hatena.ne.jp/sfujiwara/20110216/1297867818">OMRON の UPS BY35S を Linux と使う - 酒日記はてな支店</a></p>

<p>家のブレーカーがバシバシ落ちるのでfujiwaraさんおすすめのUPSを買った。<br/>
SSSを使いたかったけどDebian系はフォローしてなかったので<a href="http://www.networkupstools.org/">Network UPS Tools</a>を利用した。</p>

<h3>設定参考</h3>

<p><a href="http://sunnyone41.blogspot.jp/2011/05/omron-by50subuntu-1104.html">OMRON BY50SをUbuntu 11.04で使用する</a><br/>
<a href="http://srackham.wordpress.com/2013/02/27/configuring-nut-for-the-eaton-3s-ups-on-ubuntu-linux/">Configuring NUT for the Eaton 3S UPS on Ubuntu Linux</a></p>

<h3>作業内容</h3>

<ol>
<li>BY35Sの電源入れる</li>
<li>BY35Sからサーバの電源を取る</li>
<li>BY35SとサーバをUSBでつなぐ。</li>
</ol>


<h4>サーバにて</h4>

<pre><code># apt-get install nut
</code></pre>

<p>nut-clientとnut-serverがインストールされる。</p>

<pre><code>$ lsusb | grep -i omron
Bus 002 Device 006: ID 0590:0080 Omron Corp.
$
$ lsusb -v -s 002:006

Bus 002 Device 006: ID 0590:0080 Omron Corp.
Couldn't open device, some information will be missing
Device Descriptor:
  bLength                18
  bDescriptorType         1
  bcdUSB               1.10
  bDeviceClass            0 (Defined at Interface level)
  bDeviceSubClass         0
  bDeviceProtocol         0
  bMaxPacketSize0         8
  idVendor           0x0590 Omron Corp.
  idProduct          0x0080
  bcdDevice            1.08
  iManufacturer           3
  iProduct                1
  iSerial                 0
  bNumConfigurations      1
  Configuration Descriptor:
    bLength                 9
    bDescriptorType         2
    wTotalLength           34
    bNumInterfaces          1
    bConfigurationValue     1
    iConfiguration          0
    bmAttributes         0xe0
      Self Powered
      Remote Wakeup
    MaxPower              100mA
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        0
      bAlternateSetting       0
      bNumEndpoints           1
      bInterfaceClass         3 Human Interface Device
      bInterfaceSubClass      0 No Subclass
      bInterfaceProtocol      0 None
      iInterface              0
        HID Device Descriptor:
          bLength                 9
          bDescriptorType        33
          bcdHID               1.11
          bCountryCode            0 Not supported
          bNumDescriptors         1
          bDescriptorType        34 Report
          wDescriptorLength      27
         Report Descriptors:
           ** UNAVAILABLE **
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x81  EP 1 IN
        bmAttributes            3
          Transfer Type            Interrupt
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0008  1x 8 bytes
        bInterval              10
$
</code></pre>

<p>idVendorとidProductをメモしておく</p>

<pre><code># diff -C0 /lib/udev/rules.d/.52-nut-usbups.rules /lib/udev/rules.d/52-nut-usbups.rules
*** /lib/udev/rules.d/.52-nut-usbups.rules      2014-02-01 22:23:17.624993312 +0900
--- /lib/udev/rules.d/52-nut-usbups.rules       2014-02-02 00:27:37.540750650 +0900
***************
*** 205 ****
--- 206,208 ----
+ # omron UPS BY35S - blazer_usb
+ ATTR{idVendor}=="0590", ATTR{idProduct}=="0080", MODE="664", GROUP="nut"
+
</code></pre>

<p>メモした内容を<code>/lib/udev/rules.d/52-nut-usbups.rules</code>に追記する。</p>

<h4>nut.conf</h4>

<pre><code>MODE=standalone
</code></pre>

<h4>ups.conf</h4>

<pre><code>[ups]
     driver    = blazer_usb
     port      = auto
     vendorid  = 0590
     productid = 0080
     subdriver = ippon
</code></pre>

<h4>upsd.users</h4>

<pre><code>        [upsmon]
                password  = pass
                upsmon master
</code></pre>

<h4>upsmon.conf</h4>

<pre><code>RUN_AS_USER root
MONITOR ups@localhost 1 upsmon pass master
MINSUPPLIES 1
SHUTDOWNCMD "/sbin/shutdown -h +0"
NOTIFYCMD "/etc/nut/notifycmd"
POLLFREQ 5
POLLFREQALERT 5
HOSTSYNC 15
DEADTIME 15
POWERDOWNFLAG /etc/killpower
NOTIFYFLAG ONLINE       SYSLOG+WALL+EXEC
NOTIFYFLAG ONBATT       SYSLOG+WALL+EXEC
NOTIFYFLAG LOWBATT      SYSLOG+WALL+EXEC
NOTIFYFLAG FSD          SYSLOG+WALL+EXEC
NOTIFYFLAG COMMOK       SYSLOG+WALL+EXEC
NOTIFYFLAG COMMBAD      SYSLOG+WALL+EXEC
NOTIFYFLAG SHUTDOWN     SYSLOG+WALL+EXEC
NOTIFYFLAG REPLBATT     SYSLOG+WALL+EXEC
NOTIFYFLAG NOCOMM       SYSLOG+WALL+EXEC
NOTIFYFLAG NOPARENT     SYSLOG+WALL+EXEC
RBWARNTIME 43200
NOCOMMWARNTIME 300
FINALDELAY 5
</code></pre>

<h4>notifycmd</h4>

<p>vmのシャットダウンはfujiwaraさんのを丸コピ</p>

<pre><code>#!/bin/bash
#
# NUT NOTIFYCMD script

PATH=/sbin:/usr/sbin:/bin:/usr/bin:/usr/local/sbin:/usr/local/bin

LANG=C
export LANG

trap "exit 0" SIGTERM

if [ "$NOTIFYTYPE" = "ONLINE" ]
then
        echo $0: power restored | wall
        # Cause all instances of this script to exit.
        killall -s SIGTERM `basename $0`
fi

if [ "$NOTIFYTYPE" = "ONBATT" ]
then
        echo $0: 5 minutes till system powers down... | wall
        # Loop with one second interval to allow SIGTERM reception.
        let "n = 300"
        while [ $n -ne 0 ]
        do
                sleep 1
                let "n--"
        done

        echo $0: vm shutdown | wall
        VM=`/usr/bin/virsh list --all | grep 'running$' | awk '{print $2}'`
        for v in $VM
        do
            echo $0: shutdown virtual machine $v | wall
            virsh shutdown $v
        done

        echo $0: commencing shutdown | wall
        upsmon -c fsd
fi
</code></pre>

<h4>nut start</h4>

<pre><code># /etc/init.d/nut-client start
# /etc/init.d/nut-server start
#
# upsc ups
battery.voltage: 13.50
battery.voltage.high: -1.08
battery.voltage.low: -0.87
device.type: ups
driver.name: blazer_usb
driver.parameter.pollinterval: 2
driver.parameter.port: auto
driver.parameter.productid: 0080
driver.parameter.subdriver: ippon
driver.parameter.vendorid: 0590
driver.version: 2.6.4
driver.version.internal: 0.08
input.frequency: 49.9
input.voltage: 99.2
input.voltage.fault: 99.2
output.voltage: 98.9
ups.beeper.status: disabled
ups.delay.shutdown: 30
ups.delay.start: 180
ups.load: 29
ups.productid: 0080
ups.status: OL BYPASS
ups.temperature: 37.5
ups.type: offline / line interactive
ups.vendorid: 0590
#
#
# upsc ups ups.status
OL BYPASS
#
</code></pre>

<p>nut-serverも動かさないといけないのに気付かなくてハマってた。</p>

<ul>
<li>バッテリー状態にして5分後にシャットダウンが実行される</li>
<li>バッテリー状態にして商用電源を回復させてシャットダウンが停止される</li>
</ul>


<p>ことを確認した。これでブレーカーが落ちても取り敢えずは大丈夫。<br/>
ルーターとスイッチの電源もUPSから供給するようにしたら<br/>
ネット越しに通知を受け取れるけど配線とか配置とかやり直さないといけないので<br/>
元気があったらやりたい。元気があれば。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[自宅ルータをVyattaにして快適になった]]></title>
    <link href="http://kenjiskywalker.github.com/kenjiskywalker/blog/2013/09/10/vyatta-ubuntu/"/>
    <updated>2013-09-10T23:39:00+09:00</updated>
    <id>http://kenjiskywalker.github.com/kenjiskywalker/blog/2013/09/10/vyatta-ubuntu</id>
    <content type="html"><![CDATA[<p>市販のルータ兼無線アクセスポイント君が<br/>
2日に1回再起動しないとAirPlayできなくなってしまったので<br/>
この際自宅のネットワーク環境を一新すべく<br/>
Vyattaを導入した。その際のメモ。</p>

<h4>参考URL</h4>

<ul>
<li><a href="http://d.hatena.ne.jp/mikeda/20120331/1333172105">自宅ルータをVyattaに移行しました - IT 東京 楽しいと思うこと</a></li>
<li><a href="http://www.vyatta.com//sites/vyatta.com/files/pdfs/Vyatta_QuickStart_R6.1_v02_1.pdf">Vyatta_QuickStart_R6.1_v02_1.pdf</a></li>
</ul>


<h2>環境</h2>

<ul>
<li>Ubuntu: 12.04.3 LTS (KVM HOST)</li>
<li>Vyatta: VC6.6R1</li>
</ul>


<h2>ネットワーク</h2>

<p><img src="https://dl.dropboxusercontent.com/u/5390179/Network_diagram.png" alt="https://dl.dropboxusercontent.com/u/5390179/Network_diagram.png" /></p>

<h2>買ったもの</h2>

<p>追加NIC用に「Intel Gigabit CT Desktop Adapter EXPI9301CT」<br/>
<a href="http://www.amazon.co.jp/gp/product/B001CXWWBE/ref=as_li_ss_il?ie=UTF8&camp=247&creative=7399&creativeASIN=B001CXWWBE&linkCode=as2&tag=13nightcrows-22"><img border="0" src="http://ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&ASIN=B001CXWWBE&Format=_SL110_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=13nightcrows-22" ></a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=13nightcrows-22&l=as2&o=9&a=B001CXWWBE" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></p>

<hr />

<p>無線LAN用に「PLANEX FFP-PKA04D」<br/>
<a href="http://www.amazon.co.jp/gp/product/B005GHZ1GU/ref=as_li_ss_il?ie=UTF8&camp=247&creative=7399&creativeASIN=B005GHZ1GU&linkCode=as2&tag=13nightcrows-22"><img border="0" src="http://ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&ASIN=B005GHZ1GU&Format=_SL110_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=13nightcrows-22" ></a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=13nightcrows-22&l=as2&o=9&a=B005GHZ1GU" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></p>

<hr />

<p>スイッチは前職で頂いた8ポートのスイッチングハブを利用</p>

<h1>構築</h1>

<h3>ブリッジのインタフェースを２つつくる</h3>

<ul>
<li>eth0 Internal</li>
<li>eth1 External</li>
</ul>


<h3>/etc/network/interfaces</h3>

<pre><code>auto lo
iface lo inet loopback

iface eth0 inet manual
iface eth1 inet manual

auto br0
iface br0 inet static
        address 192.168.0.3
        network 192.168.0.0
        netmask 255.255.255.0
        broadcast 192.168.0.255
        gateway 192.168.0.1
        bridge_ports eth0
        bridge_stp off
        bridge_fd 0
        bridge_maxwait 0
        dns-nameservers 192.168.0.1

auto br1
iface br1 inet static
        address 0.0.0.0
        bridge_ports eth1
        bridge_stp off
        bridge_fd 0
        bridge_maxwait 0
</code></pre>

<p>気が付いたらvnetがアサインされていた。
ここらへんまだ理解していない。</p>

<h3>brctl show</h3>

<pre><code>bridge name     bridge id               STP enabled     interfaces
br0             8000.20cf30ea8178       no              eth0
br0             8000.XXXXXXXXXXXX       no              eth0
                                                        vnet0
                                                        vnet1
                                                        vnet2
br1             8000.XXXXXXXXXXXX       no              eth1
                                                        vnet3
lxcbr0          8000.000000000000       no
</code></pre>

<h3>VyattaのISOファイルを落としてくる</h3>

<pre><code>$ curl -O http://www.vyatta.com/downloads/vc6.6/vyatta-livecd_VC6.6R1_amd64.iso
</code></pre>

<h3>Vyatta用のディスクイメージを作成する</h3>

<pre><code>$ qemu-img create -f raw /var/lib/libvirt/images/vyatta01-2G.img 2G
</code></pre>

<h3>KVMでインストールする</h3>

<pre><code>$ virt-install  --connect qemu:///system  \
--name vyatta01 \
--ram 512  \
--vcpus=1  \
--disk path=/var/lib/libvirt/images/vyatta01-2G.img \
--nographics  \
--network=bridge:br0 --network=bridge:br1 \
--cdrom=/tmp/vyatta-livecd_VC6.6R1_amd64.iso
</code></pre>

<p>Install Default setting</p>

<ul>
<li>login: vyatta</li>
<li>Password: vyatta</li>
</ul>


<pre><code>
$ virsh console Vyatta01


boot:

Welcome to Vyatta - vyatta ttyS0

vyatta login: vyatta
Password:
Linux vyatta 3.3.8-1-amd64-vyatta #1 SMP Wed Mar 13 10:35:28 PDT 2013 x86_64
Welcome to Vyatta.
This system is open-source software. The exact distribution terms for
each module comprising the full system are described in the individual
files in /usr/share/doc/*/copyright.

vyatta@vyatta:~$ install image
Welcome to the Vyatta install program.  This script
will walk you through the process of installing the
Vyatta image to a local hard drive.
Would you like to continue? (Yes/No) [Yes]:
Probing drives: OK
Looking for pre-existing RAID groups...none found.
The Vyatta image will require a minimum 1000MB root.
Would you like me to try to partition a drive automatically
or would you rather partition it manually with parted?  If
you have already setup your partitions, you may skip this step

Partition (Auto/Parted/Skip) [Auto]:
</code></pre>

<p>のようにインストールがはじまります。<br/>
基本的にチュートリアルに乗って行けば問題ないかと。</p>

<p>新しいパスワードを設定して、再起動</p>

<pre><code>This will destroy all data on /dev/sda.
Continue? (Yes/No) [No]: yes

Enter password for administrator account
Enter vyatta password:
Retype vyatta password:
</code></pre>

<pre><code>vyatta@vyatta:~$ reboot now
</code></pre>

<h2>vyattaの設定</h2>

<p>Vyattaは他のネットワーク機器と同じように<br/>
<code>set</code>, <code>show</code>, <code>delete</code> で全て行うことができる。</p>

<ul>
<li>setで値を設定し</li>
<li>showで確認</li>
<li>間違っていればdeleteで削除</li>
<li>テストを行い、問題がなければcommit</li>
<li>永続的に設定を保持するためにsave</li>
</ul>


<p>という一連のサイクルで設定を行う。</p>

<h3>Vyattaの内部IPを設定</h3>

<pre><code># set interfaces ethernet eth0 address 192.168.0.1/24
</code></pre>

<h3>SSHの許可</h3>

<pre><code># set service ssh listen-address 192.168.0.1
</code></pre>

<h3>ISPと接続</h3>

<pre><code># set interfaces ethernet eth0 pppoe 0 user-id XXXXX@YYY.ZZZ
# set interfaces ethernet eth0 pppoe 0 password XXXXX
# set interfaces ethernet eth0 pppoe 0 default-route auto
# commit
# save
</code></pre>

<p>この時点で外部との接続が可能</p>

<pre><code>$ ping 8.8.8.8 
</code></pre>

<p>などで pppoe0 => internet の疎通確認を行う</p>

<h3>マスカレードの設定</h3>

<pre><code># set nat source rule 1 source address 192.168.0.0/24
# set nat source rule 1 outbound-interface pppoe0
# set nat source rule 1 translation address masquerade
</code></pre>

<p>試しにクライアントPCを</p>

<ul>
<li>IP: 192.168.0.100</li>
<li>NETWORK: 255.255.255.0/24</li>
<li>GATEWAY: 192.168.0.1</li>
</ul>


<p>と設定して、外部に疎通ができるか確認する。疎通ができればまずはOK。</p>

<h3>SSHを許可する</h3>

<p><code>ssh 192.168.0.1 -l vyatta</code> などとしてSSHで接続してみる</p>

<h3>DHCPを振る</h3>

<p>DHCPで192.168.0.200から192.168.0.250までの<br/>
IPアドレスを割り振るように設定。</p>

<pre><code># set service dhcp-server shared-network-name vyatta subnet 192.168.0.0/24 start 192.168.0.200 stop 192.168.0.250
# set service dhcp-server shared-network-name vyatta subnet 192.168.0.0/24 default-router 192.168.0.1
# set service dhcp-server shared-network-name vyatta subnet 192.168.0.0/24 dns-server NTT DNS SERVER
# set service dhcp-server shared-network-name vyatta subnet 192.168.0.0/24 dns-server NTT DNS SERVER
</code></pre>

<p>ここでハマったのが、PLANEXでもDHCPを振っていたせいで<br/>
DHCPでIPを付与されたクライアントPCのGATEWAYが<br/>
PLANEXを見に行ってしまっていていた。</p>

<p>PLANEXの方のDHCP機能を無効化することで解決。<br/>
しかし今度はPLANEXの方の管理画面に入れなくなってて放置してる。</p>

<h3>Vyatta 6.6で画像が表示されない</h3>

<p><a href="http://speed47.com/adiary/adiary.cgi/0145">Vyatta 6.6 画像が表示されない。 / 題名のないBlog（ｒｙ</a></p>

<p>画像が永遠に読み込めない不具合があるので下記設定を導入</p>

<pre><code>set policy route PPPOE-IN rule 10 destination address 0.0.0.0/0
set policy route PPPOE-IN rule 10 protocol tcp
set policy route PPPOE-IN rule 10 tcp flags 'SYN,!ACK,!FIN,!RST'
set policy route PPPOE-IN rule 10 set tcp-mss 1360

set interfaces ethernet eth0 policy route PPPOE-IN
</code></pre>

<h3>ポートフォワーディング</h3>

<p>外部からアクセスできるようにフォワードする</p>

<pre><code>set nat destination rule 1000 inbound-interface pppoe0
set nat destination rule 1000 destination port 22
set nat destination rule 1000 protocol tcp
set nat destination rule 1000 translation port 22
set nat destination rule 1000 translation address 192.168.0.11
</code></pre>

<pre><code>set nat destination rule 1001 inbound-interface pppoe0
set nat destination rule 1001 destination port 60000-61000
set nat destination rule 1001 protocol tcp_udp
set nat destination rule 1001 translation port 60000-61000
set nat destination rule 1001 translation address 192.168.0.12
</code></pre>

<p>こんな感じでつらつらと設定していく</p>

<h3>まとめ</h3>

<p>ISPと接続してIPマスカレードができてDHCPが振れて<br/>
ポートフォワーディングができるVyatta最高です。</p>

<p>設定変更する度に回線切れて60秒待つとかいう苦行もなくなったし<br/>
AirPlay毎日できて最高です。</p>

<p>興味があれば、まずquick startのPDFだけでも見てみるといいかもです。<br/>
@mikedaさんも書かれていますが、上記設定をするだけなら簡単にできます。</p>

<p>よかったらお試しください。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AWSのAutoScalingで立ち上がってきたVPC内のEC2インスタンスに強制的にEIPを付与する]]></title>
    <link href="http://kenjiskywalker.github.com/kenjiskywalker/blog/2013/08/27/eip-set-autoscaling-vpc/"/>
    <updated>2013-08-27T23:50:00+09:00</updated>
    <id>http://kenjiskywalker.github.com/kenjiskywalker/blog/2013/08/27/eip-set-autoscaling-vpc</id>
    <content type="html"><![CDATA[<h2>前提条件</h2>

<ul>
<li>グローバルにアクセスできる管理サーバが一台ある</li>
<li>対象のVPCにアサイン可能なEIPがある(AssociateされていないEIPがある)</li>
</ul>


<p>という前提条件が成立していれば、管理サーバで</p>

<p><div><script src='https://gist.github.com/6354555.js'></script>
<noscript><pre><code></code></pre></noscript></div>
</p>

<p>このようなスクリプトを</p>

<pre><code>*/1 * * * * root /root/set_eip.sh 2&gt; /dev/null
</code></pre>

<p>と噛ましておけば、EIPが付与されていないインスタンスを発見し次第<br/>
強制的にEIPをアサインすることができます。</p>

<p><code>2&gt; /dev/null</code>とかやってるとイスが飛んできそうなものですが<br/>
1分毎に実行していると、内部DNS結構頻繁に取りこぼしたりするので闇に葬りました。<br/>
成功した場合は<code>ADDRESS    i-XXXXXXXX eipalloc-XXXXXXXX   eipassoc-XXXXXXXX</code><br/>
という内容のメールがとんできて、お、アサインされたのか。と気付けます。</p>

<p>CloudWatchのAutoScaling発動トリガーで何かしらの通知設定をされているかと思うので<br/>
まずその通知でAutoScalingの発火を確認し、<br/>
上記EIPアサイン通知でインスタンスの起動を確認。のようなこともできます。</p>

<p><a href="http://aws.typepad.com/aws_japan/2013/08/additional-ip-address-flexibility-in-the-virtual-private-cloud.html">【AWS発表】 VPC内のパブリックIPアドレスの取い扱いがより柔軟に</a></p>

<p>ということを頑張らなくてもそのうち上記Public IPがAutoScalingにも対応すると思う。</p>

<p>ところで<code>EIP</code>と<code>Public IP</code>の違いって何なんですかね？</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GitHubのIRC hookの設定]]></title>
    <link href="http://kenjiskywalker.github.com/kenjiskywalker/blog/2013/08/27/github-issue-irc/"/>
    <updated>2013-08-27T18:43:00+09:00</updated>
    <id>http://kenjiskywalker.github.com/kenjiskywalker/blog/2013/08/27/github-issue-irc</id>
    <content type="html"><![CDATA[<p><a href="http://soh335.hatenablog.com/entry/2013/07/10/100354">github の irc hook に幾つかの event type が追加されました - @soh335 memo</a><br/>
<a href="http://blog.glidenote.com/blog/2013/07/18/github-irc-hooks-event-type/">GitHubのissueやpull reqにcommentが付いたらIRC Hoooks経由で通知されるように設定した - Glide Note</a></p>

<p><code>pull_request_review_comment</code>を追加しても来ないなーって思ってたら<br/>
<code>commit_comment</code>を有効にしないとダメだった。</p>

<p>各位注意されたし</p>
]]></content>
  </entry>
  
</feed>
