<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: linux | さよならインターネット]]></title>
  <link href="http://kenjiskywalker.github.com/kenjiskywalker/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://kenjiskywalker.github.com/kenjiskywalker/"/>
  <updated>2014-12-07T05:57:57+09:00</updated>
  <id>http://kenjiskywalker.github.com/kenjiskywalker/</id>
  <author>
    <name><![CDATA[kenjiskywalker]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[/var/lock/subsys/について]]></title>
    <link href="http://kenjiskywalker.github.com/kenjiskywalker/blog/2014/02/24/var-lock-subsys/"/>
    <updated>2014-02-24T17:49:00+09:00</updated>
    <id>http://kenjiskywalker.github.com/kenjiskywalker/blog/2014/02/24/var-lock-subsys</id>
    <content type="html"><![CDATA[<p>init.dスクリプトの中に<code>/var/lock/subsys/</code>という文字列を見たことはあったが<br/>
何をしているのかまで追ったことはなかった。</p>

<ul>
<li><a href="http://d.hatena.ne.jp/higher_tomorrow/20110421/1303337554">（今さら）Linuxでサービスを登録する - あしのあしあと</a></li>
</ul>


<p>こちらのページに大切なことは全て書いてあった。ありがたい。<br/>
「インスタンス起動時にRoute53でゴニョゴニョして、<br/>
インスタンス終了時にゴニョゴニョしたい」<br/>
という機能を実装するのに、init scriptを作成するのはよくあることだと思う。<br/>
その際、stopが上手く動かなく、その原因が<code>/var/lock/subsys/</code>であったので<br/>
備忘録として記録しておく。</p>

<ul>
<li>/etc/init/rc.conf</li>
</ul>


<p>```</p>

<h1>rc - System V runlevel compatibility</h1>

<p>#</p>

<h1>This task runs the old sysv-rc runlevel scripts.  It</h1>

<h1>is usually started by the telinit compatibility wrapper.</h1>

<p>#</p>

<h1>Do not edit this file directly. If you want to change the behaviour,</h1>

<h1>please create a file rc.override and put your changes there.</h1>

<p>start on runlevel [0123456]</p>

<p>stop on runlevel [!$RUNLEVEL]</p>

<p>task</p>

<p>export RUNLEVEL
console output
exec /etc/rc.d/rc $RUNLEVEL
```</p>

<ul>
<li>/etc/rc.d/rc</li>
</ul>


<p>```</p>

<h1>! /bin/bash</h1>

<p>#</p>

<h1>rc            This file is responsible for starting/stopping</h1>

<h1>services when the runlevel changes.</h1>

<p>#</p>

<h1>Original Author:</h1>

<h1>Miquel van Smoorenburg, <a href="&#x6d;&#97;&#x69;&#108;&#116;&#111;&#x3a;&#109;&#x69;&#x71;&#x75;&#101;&#x6c;&#x73;&#x40;&#100;&#x72;&#105;&#110;&#107;&#x65;&#x6c;&#x2e;&#x6e;&#x6c;&#x2e;&#109;&#x75;&#103;&#x6e;&#101;&#116;&#x2e;&#x6f;&#114;&#x67;">&#x6d;&#x69;&#x71;&#x75;&#x65;&#108;&#x73;&#64;&#100;&#x72;&#105;&#x6e;&#x6b;&#101;&#x6c;&#46;&#x6e;&#x6c;&#x2e;&#x6d;&#117;&#103;&#110;&#x65;&#x74;&#x2e;&#x6f;&#x72;&#103;</a></h1>

<p>#</p>

<p>...</p>

<h1>First, run the KILL scripts.</h1>

<p>for i in /etc/rc$runlevel.d/K* ; do</p>

<pre><code>    # Check if the subsystem is already up.
    subsys=${i#/etc/rc$runlevel.d/K??}
    [ -f /var/lock/subsys/$subsys -o -f /var/lock/subsys/$subsys.init ] || continue
    check_runlevel "$i" || continue

    # Bring the subsystem down.
    [ -n "$UPSTART" ] &amp;&amp; initctl emit --quiet stopping JOB=$subsys
    $i stop
    [ -n "$UPSTART" ] &amp;&amp; initctl emit --quiet stopped JOB=$subsys
</code></pre>

<p>done</p>

<h1>Now run the START scripts.</h1>

<p>for i in /etc/rc$runlevel.d/S* ; do</p>

<pre><code>    # Check if the subsystem is already up.
    subsys=${i#/etc/rc$runlevel.d/S??}
    [ -f /var/lock/subsys/$subsys ] &amp;&amp; continue
    [ -f /var/lock/subsys/$subsys.init ] &amp;&amp; continue
    check_runlevel "$i" || continue

    # If we're in confirmation mode, get user confirmation
    if [ "$do_confirm" = "yes" ]; then
            confirm $subsys
            rc=$?
            if [ "$rc" = "1" ]; then
                    continue
            elif [ "$rc" = "2" ]; then
                    do_confirm="no"
            fi
    fi

    update_boot_stage "$subsys"
    # Bring the subsystem up.
    [ -n "$UPSTART" ] &amp;&amp; initctl emit --quiet starting JOB=$subsys
    if [ "$subsys" = "halt" -o "$subsys" = "reboot" ]; then
            export LC_ALL=C
            exec $i start
    fi
    $i start
    [ -n "$UPSTART" ] &amp;&amp; initctl emit --quiet started JOB=$subsys
</code></pre>

<p>done
[ "$do_confirm" = "yes" ] &amp;&amp; rm -f /var/run/confirm
exit 0
```</p>

<p>ということで</p>

<p>```</p>

<pre><code>    [ -f /var/lock/subsys/$subsys -o -f /var/lock/subsys/$subsys.init ] || continue
</code></pre>

<p>```</p>

<p>この条件を満たさなければ<code>stop</code>が発動しないことがわかった。<br/>
nginxのinit scriptでも</p>

<ul>
<li><a href="http://wiki.nginx.org/RedHatNginxInitScript">RedHatNginxInitScript</a></li>
</ul>


<p>```
lockfile=/var/lock/subsys/nginx</p>

<p>...</p>

<p>start()
{</p>

<pre><code>[ $retval -eq 0 ] &amp;&amp; touch $lockfile
</code></pre>

<p>}</p>

<p>...</p>

<p>stop()
{</p>

<pre><code>[ $retval -eq 0 ] &amp;&amp; rm -f $lockfile
</code></pre>

<p>}
```</p>

<p>としてstart、stop時にlockfileを操作している。</p>

<p>自分の独自スクリプトを作成する場合は</p>

<ul>
<li>/etc/init.d/hoge-script</li>
</ul>


<p>```</p>

<h1>!/bin/sh</h1>

<p>#</p>

<h1>hoge-script</h1>

<p>#</p>

<h1>chkconfig: 2345 20 01</h1>

<h1>description: hoge-script shell</h1>

<p>lock_file="/var/lock/subsys/hoge-script"</p>

<p>start()
{</p>

<pre><code># lock_fileを生成しないとshutdownの時に実行されない
touch ${lock_file}

# 処理 
</code></pre>

<p>}</p>

<p>stop()
{</p>

<pre><code># lock_fileの削除
rm -r ${lock_file}

# 処理
</code></pre>

<p>}</p>

<p>case "$1" in</p>

<pre><code>start)
    start
;;
stop)
    stop
;;
*)
    echo "Usage: $0 {start|stop}"
;;
</code></pre>

<p>esac</p>

<p>exit 0
```</p>

<p>のように作成するとstart/stopの処理が正常に動く。<br/>
こういう事象に出くわすと自分の知識がいかに御座なりかわかる。</p>
]]></content>
  </entry>
  
</feed>
