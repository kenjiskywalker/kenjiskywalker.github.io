<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: linux | さよならインターネット]]></title>
  <link href="http://blog.kenjiskywalker.org/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://blog.kenjiskywalker.org/"/>
  <updated>2015-05-02T18:14:19+09:00</updated>
  <id>http://blog.kenjiskywalker.org/</id>
  <author>
    <name><![CDATA[kenjiskywalker]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[/var/lock/subsys/について]]></title>
    <link href="http://blog.kenjiskywalker.org/blog/2014/02/24/var-lock-subsys/"/>
    <updated>2014-02-24T17:49:00+09:00</updated>
    <id>http://blog.kenjiskywalker.org/blog/2014/02/24/var-lock-subsys</id>
    <content type="html"><![CDATA[<p>init.dスクリプトの中に<code>/var/lock/subsys/</code>という文字列を見たことはあったが<br/>
何をしているのかまで追ったことはなかった。</p>

<ul>
<li><a href="http://d.hatena.ne.jp/higher_tomorrow/20110421/1303337554">（今さら）Linuxでサービスを登録する - あしのあしあと</a></li>
</ul>


<p>こちらのページに大切なことは全て書いてあった。ありがたい。<br/>
「インスタンス起動時にRoute53でゴニョゴニョして、<br/>
インスタンス終了時にゴニョゴニョしたい」<br/>
という機能を実装するのに、init scriptを作成するのはよくあることだと思う。<br/>
その際、stopが上手く動かなく、その原因が<code>/var/lock/subsys/</code>であったので<br/>
備忘録として記録しておく。</p>

<ul>
<li>/etc/init/rc.conf</li>
</ul>


<pre><code># rc - System V runlevel compatibility
#
# This task runs the old sysv-rc runlevel scripts.  It
# is usually started by the telinit compatibility wrapper.
#
# Do not edit this file directly. If you want to change the behaviour,
# please create a file rc.override and put your changes there.

start on runlevel [0123456]

stop on runlevel [!$RUNLEVEL]

task

export RUNLEVEL
console output
exec /etc/rc.d/rc $RUNLEVEL
</code></pre>

<ul>
<li>/etc/rc.d/rc</li>
</ul>


<pre><code>#! /bin/bash
#
# rc            This file is responsible for starting/stopping
#               services when the runlevel changes.
#
# Original Author:
#               Miquel van Smoorenburg, &lt;miquels@drinkel.nl.mugnet.org&gt;
#

... 

# First, run the KILL scripts.
for i in /etc/rc$runlevel.d/K* ; do

        # Check if the subsystem is already up.
        subsys=${i#/etc/rc$runlevel.d/K??}
        [ -f /var/lock/subsys/$subsys -o -f /var/lock/subsys/$subsys.init ] || continue
        check_runlevel "$i" || continue

        # Bring the subsystem down.
        [ -n "$UPSTART" ] &amp;&amp; initctl emit --quiet stopping JOB=$subsys
        $i stop
        [ -n "$UPSTART" ] &amp;&amp; initctl emit --quiet stopped JOB=$subsys
done

# Now run the START scripts.
for i in /etc/rc$runlevel.d/S* ; do

        # Check if the subsystem is already up.
        subsys=${i#/etc/rc$runlevel.d/S??}
        [ -f /var/lock/subsys/$subsys ] &amp;&amp; continue
        [ -f /var/lock/subsys/$subsys.init ] &amp;&amp; continue
        check_runlevel "$i" || continue

        # If we're in confirmation mode, get user confirmation
        if [ "$do_confirm" = "yes" ]; then
                confirm $subsys
                rc=$?
                if [ "$rc" = "1" ]; then
                        continue
                elif [ "$rc" = "2" ]; then
                        do_confirm="no"
                fi
        fi

        update_boot_stage "$subsys"
        # Bring the subsystem up.
        [ -n "$UPSTART" ] &amp;&amp; initctl emit --quiet starting JOB=$subsys
        if [ "$subsys" = "halt" -o "$subsys" = "reboot" ]; then
                export LC_ALL=C
                exec $i start
        fi
        $i start
        [ -n "$UPSTART" ] &amp;&amp; initctl emit --quiet started JOB=$subsys
done
[ "$do_confirm" = "yes" ] &amp;&amp; rm -f /var/run/confirm
exit 0
</code></pre>

<p>ということで</p>

<pre><code>        [ -f /var/lock/subsys/$subsys -o -f /var/lock/subsys/$subsys.init ] || continue
</code></pre>

<p>この条件を満たさなければ<code>stop</code>が発動しないことがわかった。<br/>
nginxのinit scriptでも</p>

<ul>
<li><a href="http://wiki.nginx.org/RedHatNginxInitScript">RedHatNginxInitScript</a></li>
</ul>


<pre><code>lockfile=/var/lock/subsys/nginx

...

start()
{
    [ $retval -eq 0 ] &amp;&amp; touch $lockfile
}

...

stop()
{
    [ $retval -eq 0 ] &amp;&amp; rm -f $lockfile
}
</code></pre>

<p>としてstart、stop時にlockfileを操作している。</p>

<p>自分の独自スクリプトを作成する場合は</p>

<ul>
<li>/etc/init.d/hoge-script</li>
</ul>


<pre><code>#!/bin/sh
#
# hoge-script
#
# chkconfig: 2345 20 01
# description: hoge-script shell


lock_file="/var/lock/subsys/hoge-script"

start()
{
    # lock_fileを生成しないとshutdownの時に実行されない
    touch ${lock_file}

    # 処理 

}

stop()
{
    # lock_fileの削除
    rm -r ${lock_file}

    # 処理
}

case "$1" in
    start)
        start
    ;;
    stop)
        stop
    ;;
    *)
        echo "Usage: $0 {start|stop}"
    ;;
esac

exit 0
</code></pre>

<p>のように作成するとstart/stopの処理が正常に動く。<br/>
こういう事象に出くわすと自分の知識がいかに御座なりかわかる。</p>
]]></content>
  </entry>
  
</feed>
