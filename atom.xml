<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[さよならインターネット]]></title>
  <link href="http://blog.kenjiskywalker.org/atom.xml" rel="self"/>
  <link href="http://blog.kenjiskywalker.org/"/>
  <updated>2015-02-14T22:50:02+09:00</updated>
  <id>http://blog.kenjiskywalker.org/</id>
  <author>
    <name><![CDATA[kenjiskywalker]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[負荷テストが気軽に行えるsiegeでちょっとハマった]]></title>
    <link href="http://blog.kenjiskywalker.org/blog/2015/02/13/siege/"/>
    <updated>2015-02-13T18:06:00+09:00</updated>
    <id>http://blog.kenjiskywalker.org/blog/2015/02/13/siege</id>
    <content type="html"><![CDATA[<blockquote><p>siege: version 3.0.9</p></blockquote>

<h2>TL;DR</h2>

<p>httpsのリクエストの際にうんともすんともいわなくて、lddで見たら<br/>
opensslのライブラリ読み込んでなかった。</p>

<h2>Siege</h2>

<ul>
<li><a href="http://www.joedog.org/siege-home/">Siege Home</a></li>
<li><a href="http://qiita.com/inokappa/items/84f42dbd718a8070bd1d">Siege でお手軽 Web 負荷テスト - Qiita</a></li>
</ul>


<p>詳しくは上記URLを参照してください。</p>

<p>kappa大先生の記事を見て、これいいやん！ってなって導入した。<br/>
負荷テストをかけるサーバも今ではAWSのスポットインスタンスを利用すれば<br/>
c3.4xlargeも$0.5/hで借りれて最高だ。</p>

<h2>インストール</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># gccが必要なのでインストール
</span><span class='line'>$ yum install gcc
</span><span class='line'>
</span><span class='line'>$ wget http://download.joedog.org/siege/siege-3.0.9.tar.gz
</span><span class='line'>$ tar xzf siege-3.0.9.tar.gz
</span><span class='line'>$ cd siege-3.0.9
</span><span class='line'>$ ./configure
</span><span class='line'>$ make -j 16
</span><span class='line'>$ make install</span></code></pre></td></tr></table></div></figure>


<h3>HTTPSにつながらない?</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ siege -c 1 -t 2S http://example.com/
</span><span class='line'>** SIEGE 3.0.9
</span><span class='line'>** Preparing 1 concurrent users for battle.
</span><span class='line'>The server is now under siege...
</span><span class='line'>HTTP/1.1 200   0.69 secs:    5121 bytes ==&gt; GET  /
</span><span class='line'>HTTP/1.1 200   0.68 secs:    5123 bytes ==&gt; GET  /
</span><span class='line'>
</span><span class='line'>Lifting the server siege...      done.
</span><span class='line'>
</span><span class='line'>Transactions:                      0 hits
</span><span class='line'>Availability:                   0.00 %
</span><span class='line'>Elapsed time:                   1.00 secs
</span><span class='line'>Data transferred:               0.00 MB
</span><span class='line'>Response time:                  0.00 secs
</span><span class='line'>Transaction rate:               0.00 trans/sec
</span><span class='line'>Throughput:                     0.00 MB/sec
</span><span class='line'>Concurrency:                    0.01
</span><span class='line'>Successful transactions:           1
</span><span class='line'>Failed transactions:               0
</span><span class='line'>Longest transaction:            0.01
</span><span class='line'>Shortest transaction:           0.01
</span><span class='line'>
</span><span class='line'>FILE: /root/siege.log
</span><span class='line'>You can disable this annoying message by editing
</span><span class='line'>the .siegerc file in your home directory; change
</span><span class='line'>the directive 'show-logfile' to false.
</span><span class='line'>$</span></code></pre></td></tr></table></div></figure>


<p>では応答したのに</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ siege -c 1-t 2S https://example.com/
</span><span class='line'>** SIEGE 3.0.9
</span><span class='line'>** Preparing 1 concurrent users for battle.
</span><span class='line'>The server is now under siege...
</span><span class='line'>Lifting the server siege...      done.
</span><span class='line'>
</span><span class='line'>Transactions:                      0 hits
</span><span class='line'>Availability:                   0.00 %
</span><span class='line'>Elapsed time:                   4.68 secs
</span><span class='line'>Data transferred:               0.00 MB
</span><span class='line'>Response time:                  0.00 secs
</span><span class='line'>Transaction rate:               0.00 trans/sec
</span><span class='line'>Throughput:                     0.00 MB/sec
</span><span class='line'>Concurrency:                    0.00
</span><span class='line'>Successful transactions:           0
</span><span class='line'>Failed transactions:               3
</span><span class='line'>Longest transaction:            0.00
</span><span class='line'>Shortest transaction:           0.00
</span><span class='line'>
</span><span class='line'>FILE: /root/siege.log
</span><span class='line'>You can disable this annoying message by editing
</span><span class='line'>the .siegerc file in your home directory; change
</span><span class='line'>the directive 'show-logfile' to false.
</span><span class='line'>$</span></code></pre></td></tr></table></div></figure>


<p>などとFailedになってしまった。<br/>
最初、cookieで認証しているのでcookieの渡し方が悪かったのかと思ったが<br/>
ふとライブラリちゃんと読み込んでいるのか気になったので確認してみた。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ldd /usr/local/bin/siege
</span><span class='line'>        linux-vdso.so.1 =&gt;  (0x00007fff0a7fe000)
</span><span class='line'>        libpthread.so.0 =&gt; /lib64/libpthread.so.0 (0x00007fe27e031000)
</span><span class='line'>        libc.so.6 =&gt; /lib64/libc.so.6 (0x00007fe27dc8c000)
</span><span class='line'>        /lib64/ld-linux-x86-64.so.2 (0x00007fe27e253000)
</span><span class='line'>$</span></code></pre></td></tr></table></div></figure>


<p>おや&hellip; <br/>
ということで<code>yum install openssl-devel</code>をしてから再度インストールしなおす。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ldd /usr/local/bin/siege
</span><span class='line'>        linux-vdso.so.1 =&gt;  (0x00007fff3a561000)
</span><span class='line'>        libpthread.so.0 =&gt; /lib64/libpthread.so.0 (0x00007f77766e2000)
</span><span class='line'>        libdl.so.2 =&gt; /lib64/libdl.so.2 (0x00007f77764de000)
</span><span class='line'>        libssl.so.10 =&gt; /usr/lib64/libssl.so.10 (0x00007f7776270000)
</span><span class='line'>        libcrypto.so.10 =&gt; /lib64/libcrypto.so.10 (0x00007f7775e8c000)
</span><span class='line'>        libc.so.6 =&gt; /lib64/libc.so.6 (0x00007f7775ae7000)
</span><span class='line'>        /lib64/ld-linux-x86-64.so.2 (0x00007f7776904000)
</span><span class='line'>        libgssapi_krb5.so.2 =&gt; /lib64/libgssapi_krb5.so.2 (0x00007f77758a3000)
</span><span class='line'>        libkrb5.so.3 =&gt; /lib64/libkrb5.so.3 (0x00007f77755be000)
</span><span class='line'>        libcom_err.so.2 =&gt; /usr/lib64/libcom_err.so.2 (0x00007f77753bb000)
</span><span class='line'>        libk5crypto.so.3 =&gt; /lib64/libk5crypto.so.3 (0x00007f777518f000)
</span><span class='line'>        libz.so.1 =&gt; /lib64/libz.so.1 (0x00007f7774f79000)
</span><span class='line'>        libkrb5support.so.0 =&gt; /lib64/libkrb5support.so.0 (0x00007f7774d6e000)
</span><span class='line'>        libkeyutils.so.1 =&gt; /lib64/libkeyutils.so.1 (0x00007f7774b6a000)
</span><span class='line'>        libresolv.so.2 =&gt; /lib64/libresolv.so.2 (0x00007f7774953000)
</span><span class='line'>        libgcc_s.so.1 =&gt; /lib64/libgcc_s.so.1 (0x00007f777473d000)
</span><span class='line'>        libselinux.so.1 =&gt; /usr/lib64/libselinux.so.1 (0x00007f777451b000)
</span><span class='line'>$</span></code></pre></td></tr></table></div></figure>


<p>おお、色々読み込んでいる</p>

<h2>改めて確認</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ siege -c 1 -t 3S https://example.com/
</span><span class='line'>** SIEGE 3.0.9
</span><span class='line'>** Preparing 1 concurrent users for battle.
</span><span class='line'>The server is now under siege...
</span><span class='line'>HTTP/1.1 200   0.78 secs:    5119 bytes ==&gt; GET  /
</span><span class='line'>
</span><span class='line'>Lifting the server siege...      done.
</span><span class='line'>
</span><span class='line'>Transactions:                      1 hits
</span><span class='line'>Availability:                 100.00 %
</span><span class='line'>Elapsed time:                   2.89 secs
</span><span class='line'>Data transferred:               0.00 MB
</span><span class='line'>Response time:                  0.78 secs
</span><span class='line'>Transaction rate:               0.35 trans/sec
</span><span class='line'>Throughput:                     0.00 MB/sec
</span><span class='line'>Concurrency:                    0.27
</span><span class='line'>Successful transactions:           1
</span><span class='line'>Failed transactions:               0
</span><span class='line'>Longest transaction:            0.78
</span><span class='line'>Shortest transaction:           0.78
</span><span class='line'>
</span><span class='line'>FILE: /root/siege.log
</span><span class='line'>You can disable this annoying message by editing
</span><span class='line'>the .siegerc file in your home directory; change
</span><span class='line'>the directive 'show-logfile' to false.
</span><span class='line'>$</span></code></pre></td></tr></table></div></figure>


<p>無事レスポンスを取得することができた。</p>

<h3>cookieの渡し方</h3>

<p><code>--header="Cookie: k=v; k=v;"</code>みたいな渡し方でいけた。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ siege -c 1 -t 3S https://example.com/ --header="Cookie: key_one=value_one; domain=.example.com; path=/; expires=Fri, 13 Feb 2015 16:41:26 -0000; key_two=value_two; path=/;"</span></code></pre></td></tr></table></div></figure>


<p>こちらからは以上です。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[起動時にresolv.confが何者かに上書きされた時に更に上書きをする戦い]]></title>
    <link href="http://blog.kenjiskywalker.org/blog/2015/02/07/update-resolv-conf/"/>
    <updated>2015-02-07T17:41:00+09:00</updated>
    <id>http://blog.kenjiskywalker.org/blog/2015/02/07/update-resolv-conf</id>
    <content type="html"><![CDATA[<blockquote><p>みんなこういうのはどういう対応しているんだろう</p></blockquote>

<blockquote class="twitter-tweet" data-conversation="none" lang="en"><p><a href="https://twitter.com/kenjiskywalker">@kenjiskywalker</a> PEERDNS=noを/etc/sysconfig/network-scripts/ifcfg-ethXに書くとか</p>&mdash; TSUNEMATSU Shinya (@tnmt) <a href="https://twitter.com/tnmt/status/564019209189851136">February 7, 2015</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>常松先生が一瞬で解決方法を教えてくれました。<br/>
ありがとうございます！</p>

<h2>resolv.confが圧倒的暴力によって上書きされる場合</h2>

<p>対応として<code>resolv-update</code>みたいな雑なサービス定義をして、サーバ起動時に実行させるようにした。<br/>
ポイントはcloud-initとかそれ系のヤツが実行される前に上書いてもその後に上書きされるのでタイミングが大切。</p>

<p>ここの</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># chkconfig: 2345 49 49</span></code></pre></td></tr></table></div></figure>


<p><code>49 49</code>の最初の数字が起動時に実行される順番で、後ろの数字が終了時に実行される順番。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ chkconfig --add resolv-update</span></code></pre></td></tr></table></div></figure>


<p>とすることで自動に実行されるようになる。</p>

<p>runlevel 3のものを確認したければ<code>/etc/rc3.d/</code>とか見ればわかる。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/bin/sh
</span><span class='line'>#
</span><span class='line'># resolv-update
</span><span class='line'># create by kenjiskywalker
</span><span class='line'>#
</span><span class='line'># chkconfig: 2345 49 49
</span><span class='line'># description: resolv-update
</span><span class='line'>
</span><span class='line'>lock_file="/var/lock/subsys/resolv-update"
</span><span class='line'>redis_port="6379"
</span><span class='line'>
</span><span class='line'>start()
</span><span class='line'>{
</span><span class='line'>    # lock_fileを生成しないとshutdownの時に実行されない
</span><span class='line'>    touch ${lock_file}
</span><span class='line'>
</span><span class='line'>    # 圧倒的暴力によってresolv.confが上書きされていたら更に上書きする
</span><span class='line'>    if [[ -z "`grep 'nameserver 127.0.0.1' /etc/resolv.conf`" ]]
</span><span class='line'>    then
</span><span class='line'>        sed -i '1s/^/nameserver 127.0.0.1\n/' /etc/resolv.conf
</span><span class='line'>    fi
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>stop()
</span><span class='line'>{
</span><span class='line'>    # lock_fileの削除
</span><span class='line'>    rm -r ${lock_file}
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>case "$1" in
</span><span class='line'>    start)
</span><span class='line'>        start
</span><span class='line'>    ;;
</span><span class='line'>    stop)
</span><span class='line'>        stop
</span><span class='line'>    ;;
</span><span class='line'>    *)
</span><span class='line'>        echo "Usage: $0 {start|stop}"
</span><span class='line'>    ;;
</span><span class='line'>esac
</span><span class='line'>
</span><span class='line'>exit 0</span></code></pre></td></tr></table></div></figure>


<p>Systemd？はて？</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「降三世明王」について]]></title>
    <link href="http://blog.kenjiskywalker.org/blog/2015/01/21/trailokyavijaya/"/>
    <updated>2015-01-21T00:30:00+09:00</updated>
    <id>http://blog.kenjiskywalker.org/blog/2015/01/21/trailokyavijaya</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/B009NOI46Q/ref=as_li_ss_il?ie=UTF8&camp=247&creative=7399&creativeASIN=B009NOI46Q&linkCode=as2&tag=13nightcrows-22"><img border="0" src="http://ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&ASIN=B009NOI46Q&Format=_SL250_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=13nightcrows-22" ></a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=13nightcrows-22&l=as2&o=9&a=B009NOI46Q" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></p>

<p>降三世明王が好きなのでそのことについて書く。</p>

<p>降三世明王、仏像のつくりはヒンドゥー教と仏教の争いみたいな感じで<br/>
シヴァ神を踏みつけていてあんまりよろしくはない。</p>

<p>三世は過去現在未来という意味が強く、受け取り側次第でいかようにも取れる。<br/>
天下布武の天下は全国なのか近畿だけなのかみたいな感じで。</p>

<p>それはそれとして、降三世明王のある側面では「人間の三毒を取り除く」という意味合いがある。<br/>
三毒とは「貪・瞋・痴」、貪り、怒り、愚痴を吐くことだ。</p>

<p>人間のできていない自分はこの三毒にすぐにハマる。<br/>
特に対人間となるとすぐに怒ったり愚痴ったりする。</p>

<p>そういう時に降三世明王を自分の中に入れ<br/>
衆生や世界、宇宙を感じることを思い出して、<br/>
今という瞬間と、自分という我執を俯瞰できたら良いなといつも思う。</p>

<p>降三世明王、身につまされる神様だ。</p>

<p>minibutsu、Yahoo!ショッピングでは買えるっぽい。<br/>
<a href="http://store.shopping.yahoo.co.jp/minibutsu/18.html">http://store.shopping.yahoo.co.jp/minibutsu/18.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「イシューからはじめよ」を読んだ]]></title>
    <link href="http://blog.kenjiskywalker.org/blog/2015/01/12/issue-book/"/>
    <updated>2015-01-12T01:49:00+09:00</updated>
    <id>http://blog.kenjiskywalker.org/blog/2015/01/12/issue-book</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/%E3%82%A4%E3%82%B7%E3%83%A5%E3%83%BC%E3%81%8B%E3%82%89%E3%81%AF%E3%81%98%E3%82%81%E3%82%88-%E2%80%95-%E7%9F%A5%E7%9A%84%E7%94%9F%E7%94%A3%E3%81%AE%E3%80%8C%E3%82%B7%E3%83%B3%E3%83%97%E3%83%AB%E3%81%AA%E6%9C%AC%E8%B3%AA%E3%80%8D-%E5%AE%89%E5%AE%85%E5%92%8C%E4%BA%BA-ebook/dp/B00MTL340G%3FSubscriptionId%3D0AVSM5SVKRWTFMG7ZR82%26tag%3D13nightcrows-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3DB00MTL340G" target="_blank" title="イシューからはじめよ ― 知的生産の「シンプルな本質」"><img src="http://ecx.images-amazon.com/images/I/51-lWx66ITL.jpg" width="317" height="500" alt="イシューからはじめよ ― 知的生産の「シンプルな本質」" /></a></p>

<p>MTGとか方法が目的になりがちになる。<br/>
ゴールを意識して、そのゴールを達成する為に何をすべきかを常に意識する必要がある。<br/>
実作業においても、目的があって、その目的を達成する為に色々な作業が発生して<br/>
余計なことに時間がかかったりする。綺麗にしたり冗長性をなくしたりとか<br/>
そういうことに時間を使いがちだけど、まずはゴール(目的)を持ってそれを達成して<br/>
次に品質を上げることに注力しないと何時までたっても終わらない。</p>

<p>自分の仕事の進め方で悪いところがまさにそれで、取り敢えず手を動かして<br/>
動くことをゴールとして、品質についてはまた次の機会へ。とすることが<br/>
今の自分の課題だと認識している。</p>

<p>だからといってメンテナンスのしづらいものでも良いかというとそうではなく<br/>
次への段階を踏みやすいように足あとと次への段階は明示的にしておくことが大切だと思う。</p>

<p>とにかく常に物事に対してのゴールと、そのゴールを達成する為に必要な作業を<br/>
計画的に、スピード感を持って仕事に取り組んでいきたいと改めて思った。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「Serverspec」本を読んだ]]></title>
    <link href="http://blog.kenjiskywalker.org/blog/2015/01/11/serverspec-book/"/>
    <updated>2015-01-11T23:44:00+09:00</updated>
    <id>http://blog.kenjiskywalker.org/blog/2015/01/11/serverspec-book</id>
    <content type="html"><![CDATA[<p>執筆者のmizzyさんからご恵贈頂きました！ありがとうございます！</p>

<ul>
<li><a href="http://www.oreilly.co.jp/books/9784873117096/">Serverspec - O&#8217;Reilly Japan</a></li>
<li><a href="http://mizzy.org/blog/2014/12/25/1/">「Serverspec」という本が出ます - mizzy.org</a></li>
</ul>


<p><a href="http://www.amazon.co.jp/Serverspec-%E5%AE%AE%E4%B8%8B-%E5%89%9B%E8%BC%94/dp/4873117097%3FSubscriptionId%3D0AVSM5SVKRWTFMG7ZR82%26tag%3D13nightcrows-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4873117097" target="_blank" title="Serverspec"><img src="http://ecx.images-amazon.com/images/I/51P6qVOPALL.jpg" width="354" height="500" alt="Serverspec" /></a></p>

<h2>書籍について</h2>

<p>最近はソフトウェアの本はあまり読まなくて、<br/>
オフィシャルサイトのドキュメントを読むように心がけている(一次情報大切)ので<br/>
そのために技術書を購入することはなくなっていた。まずは手を動かすことが大切だろうと。</p>

<p>mizzyさんには日頃から良くして頂いているけど、業務で普通にServerspec使ってるし<br/>
ただのマニュアル網羅しているだけだったら買わなくてもいいかな。と考えていました。</p>

<p>第4章を読んで反省した。めちゃくちゃ有意義だった。<br/>
というか全体的にソフトウェアをつくる上での考え方みたいな普段なかなか聞くことのできない<br/>
背景を書籍を通じて理解できてとても有意義だった。</p>

<h2>初めての人は？</h2>

<p>第2、第3章を読んで付録Aを見ながら手を動かせばすぐに動かせる。<br/>
Serverspecの素敵なところは、とてもシンプルに、簡単に動かせるところなので<br/>
よくわからんけどいっちょやってみるか〜で、30分もかからないで動かせると思う。</p>

<h2>状態を担保する存在の必要性</h2>

<p>イミュータブルやディスポーザブルな世界になったらServerspecは不要になるとかはあまり思わない。<br/>
設定が実現されたかどうかはプロビジョニングツールでは担保できないから<br/>
最終的に自動的にサーバが構築されたとしても、そのことを保証するためのツールは<br/>
何かしら必要だと思う。<br/>
実際にAWSでオートスケールでインスタンスを立ち上げていた時は<br/>
最終的にそのインスタンスが期待した状態にあるかどうかをServerspecで確認し<br/>
それを元に負荷分散に追加するようにしていた。</p>

<h2>Specinfraについて</h2>

<p>Serverspecが素晴らしいのはもう既に有名なんだけど<br/>
その中で使われているSpecinfraがめちゃめちゃ便利で、Chefでいう<br/>
ohaiのようなものなんだけど、OS毎の環境差分を抽象化してくれるので<br/>
itamaeのような使い方は本当に上手だと思う。</p>

<p>capistranoのsskitをSpecinfraに切り替えるとかしたら楽しそうではある。</p>

<p>Serverspecという名前の本だけれど、それ以上にソフトウェアをつくる上での哲学や<br/>
どのようにして運用するか、何を守り、何を捨てるか、どこへ向かうのかなど<br/>
インターネットに関わって仕事をしている人ならば誰しもが楽しめる本だと思う。</p>

<h2>最後に</h2>

<p>この本を読ませて頂いて、インターネットの仕事をしていてよかったな〜と<br/>
改めて思った。mizzyさんありがとうございます。<br/>
Asuraっていうコードネームめちゃめちゃ好きでした。</p>

<p>この本はまた何回か読み直したい本だ。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ansibleはcheck modeだとshellやcommandは実行されない]]></title>
    <link href="http://blog.kenjiskywalker.org/blog/2015/01/08/ansible-check-mode/"/>
    <updated>2015-01-08T11:46:00+09:00</updated>
    <id>http://blog.kenjiskywalker.org/blog/2015/01/08/ansible-check-mode</id>
    <content type="html"><![CDATA[<p>最近は深刻なjinja2とAnsible疲れです。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>TASK: [ruby | check ruby rbenv installed] *************************************
</span><span class='line'>skipping: [192.0.2.100]
</span><span class='line'>ok: [192.0.2.100] =&gt; {"msg": "check mode not supported for command", "skipped": true}
</span><span class='line'>
</span><span class='line'>TASK: [ruby | rbenv install ] *******************************
</span><span class='line'>fatal: [192.0.2.100] =&gt; error while evaluating conditional: ruby_installed.find(2.1.4)
</span><span class='line'>
</span><span class='line'>FATAL: all hosts have already failed -- aborting</span></code></pre></td></tr></table></div></figure>


<p>こんなエラーが出た。</p>

<p><a href="http://docs.ansible.com/playbooks_checkmode.html">Check Mode (Dry Run)</a></p>

<p>dry runでは<code>shell</code>や<code>command</code>はskipされるとのことなので</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>- name: check ruby rbenv installed
</span><span class='line'>  shell: cd; bash -lc "rbenv versions | grep  | tr '*' ' ' | sed -e 's/\s\+//' | cut -f1 -d' '"
</span><span class='line'>  register: ruby_installed
</span><span class='line'>  always_run: yes
</span><span class='line'>  ignore_errors: yes
</span><span class='line'>  tags:
</span><span class='line'>    - ruby
</span><span class='line'>    - ruby:install
</span><span class='line'>    - install</span></code></pre></td></tr></table></div></figure>


<p>のように<code>always_run: yes</code>にしなければならない。<br/>
自分メモ。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「私本太平記」読んだ]]></title>
    <link href="http://blog.kenjiskywalker.org/blog/2015/01/04/taiheiki/"/>
    <updated>2015-01-04T12:21:00+09:00</updated>
    <id>http://blog.kenjiskywalker.org/blog/2015/01/04/taiheiki</id>
    <content type="html"><![CDATA[<p>吉川英治さんの本が無料で読めるありがたい時代なので<a href="http://www.amazon.co.jp/dp/B00G3QMEZY">私本太平</a>記読んだ。<br/>
応仁の乱以前に結構京都燃えてるやんって思った。<br/>
藤沢と鎌倉の浜辺の戦いめちゃめちゃ金かけて映像化してほしい。<br/>
楠木正成や新田義貞より北畠顕家の方がかっこよかった。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「齋藤孝の速読塾」と「超高速勉強法」を読んだ]]></title>
    <link href="http://blog.kenjiskywalker.org/blog/2015/01/03/sokudoku-books/"/>
    <updated>2015-01-03T10:37:00+09:00</updated>
    <id>http://blog.kenjiskywalker.org/blog/2015/01/03/sokudoku-books</id>
    <content type="html"><![CDATA[<p>おじさんなので時間がない。時間がないので<br/>
時間をつくる工夫が必要になる。<br/>
その時間を有効化するためにどうするか、みたいなことを考えて<br/>
情報量を増やしたり行動力を高めたりするのが良いと考えた。</p>

<p>そこで取り敢えず本を速く読む為には、みたいな本を２冊読んだ。</p>

<div class="booklog_html"><table><tr><td class="booklog_html_image"><a href="http://www.amazon.co.jp/%E8%B6%85%E9%AB%98%E9%80%9F%E5%8B%89%E5%BC%B7%E6%B3%95-%E6%A4%8B%E6%9C%A8%E4%BF%AE%E4%B8%89-ebook/dp/B00MUN15IQ%3FSubscriptionId%3D0AVSM5SVKRWTFMG7ZR82%26tag%3D13nightcrows-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3DB00MUN15IQ" target="_blank"><img src="http://ecx.images-amazon.com/images/I/51X5dD2wvLL._SL160_.jpg" width="103" height="150" style="border:0;border-radius:0;" /></a></td><td class="booklog_html_info" style="padding-left:20px;"><div class="booklog_html_title" style="margin-bottom:10px;font-size:14px;font-weight:bold;"><a href="http://www.amazon.co.jp/%E8%B6%85%E9%AB%98%E9%80%9F%E5%8B%89%E5%BC%B7%E6%B3%95-%E6%A4%8B%E6%9C%A8%E4%BF%AE%E4%B8%89-ebook/dp/B00MUN15IQ%3FSubscriptionId%3D0AVSM5SVKRWTFMG7ZR82%26tag%3D13nightcrows-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3DB00MUN15IQ" target="_blank">超高速勉強法</a></div><div style="margin-bottom:10px;"><div class="booklog_html_author" style="margin-bottom:15px;font-size:12px;;line-height:1.2em">著者 : <a href="http://booklog.jp/author/%E6%A4%8B%E6%9C%A8%E4%BF%AE%E4%B8%89" target="_blank">椋木修三</a></div><div class="booklog_html_manufacturer" style="margin-bottom:5px;font-size:12px;;line-height:1.2em">経済界</div><div class="booklog_html_release" style="font-size:12px;;line-height:1.2em">発売日 : 2004-11-01</div></div><div class="booklog_html_link_amazon"><a href="http://booklog.jp/item/1/B00MUN15IQ" style="font-size:12px;" target="_blank">ブクログでレビューを見る»</a></div></td></tr></table></div>




<div class="booklog_html"><table><tr><td class="booklog_html_image"><a href="http://www.amazon.co.jp/%E9%BD%8B%E8%97%A4%E5%AD%9D%E3%81%AE%E9%80%9F%E8%AA%AD%E5%A1%BE-%E3%81%93%E3%82%8C%E3%81%A7%E9%A0%AD%E3%81%8C%E3%82%B0%E3%83%B3%E3%82%B0%E3%83%B3%E3%82%88%E3%81%8F%E3%81%AA%E3%82%8B-%E3%81%A1%E3%81%8F%E3%81%BE%E6%96%87%E5%BA%AB-%E9%BD%8B%E8%97%A4-%E5%AD%9D/dp/4480426973%3FSubscriptionId%3D0AVSM5SVKRWTFMG7ZR82%26tag%3D13nightcrows-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4480426973" target="_blank"><img src="http://ecx.images-amazon.com/images/I/51D8UXD3pJL._SL160_.jpg" width="105" height="150" style="border:0;border-radius:0;" /></a></td><td class="booklog_html_info" style="padding-left:20px;"><div class="booklog_html_title" style="margin-bottom:10px;font-size:14px;font-weight:bold;"><a href="http://www.amazon.co.jp/%E9%BD%8B%E8%97%A4%E5%AD%9D%E3%81%AE%E9%80%9F%E8%AA%AD%E5%A1%BE-%E3%81%93%E3%82%8C%E3%81%A7%E9%A0%AD%E3%81%8C%E3%82%B0%E3%83%B3%E3%82%B0%E3%83%B3%E3%82%88%E3%81%8F%E3%81%AA%E3%82%8B-%E3%81%A1%E3%81%8F%E3%81%BE%E6%96%87%E5%BA%AB-%E9%BD%8B%E8%97%A4-%E5%AD%9D/dp/4480426973%3FSubscriptionId%3D0AVSM5SVKRWTFMG7ZR82%26tag%3D13nightcrows-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4480426973" target="_blank">齋藤孝の速読塾 これで頭がグングンよくなる! (ちくま文庫)</a></div><div style="margin-bottom:10px;"><div class="booklog_html_author" style="margin-bottom:15px;font-size:12px;;line-height:1.2em">著者 : <a href="http://booklog.jp/author/%E9%BD%8B%E8%97%A4%E5%AD%9D" target="_blank">齋藤孝</a></div><div class="booklog_html_manufacturer" style="margin-bottom:5px;font-size:12px;;line-height:1.2em">筑摩書房</div><div class="booklog_html_release" style="font-size:12px;;line-height:1.2em">発売日 : 2010-04-07</div></div><div class="booklog_html_link_amazon"><a href="http://booklog.jp/item/1/4480426973" style="font-size:12px;" target="_blank">ブクログでレビューを見る»</a></div></td></tr></table></div>


<ul>
<li>基本的に1回で処理できる文章の量を増やす</li>
<li>もくじを暗記する(全体の構成を把握する)</li>
<li>2割ぐらいでサラサラ読む(単語を流す)</li>
<li>3色のマーカー(自分の中にレベルを3段階入れて各種マークをする。２度目はそのマークを主に見ていく)</li>
<li>アウトプットをすることを考えながら読む</li>
<li>常に要約して読む</li>
</ul>


<p>みたいなことが書いてあった。とにかく要点にまとめることと<br/>
アウトプットをする、みたいなことは大切だと思う。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2014/12読んだ本]]></title>
    <link href="http://blog.kenjiskywalker.org/blog/2014/12/29/201412-book/"/>
    <updated>2014-12-29T01:26:00+09:00</updated>
    <id>http://blog.kenjiskywalker.org/blog/2014/12/29/201412-book</id>
    <content type="html"><![CDATA[<p>今後技術だけで飯食っていけるわけでもないので<br/>
取り敢えず知見を広める為にForbesJapanを年間購読した。</p>

<p>賭けの考え方がギャンブル以外にも使える思考形式を学べてよかった。<br/>
負けを取り返すとか、調子が良いから大きく出るとかではなくて<br/>
常に目の前の勝負に集中することと、いかに自分の状態を客観視できるか<br/>
雑になったり感情的になったり(ティルト)しているかに早く気付いて、<br/>
手を引けるかが大事みたいなことが書いてあって、本当にそうだなってなってた。</p>

<p>サイコ、21巻が出たので20巻から読み直してたら最後に21巻最終巻って書いてあって<br/>
最後の最後までどうしようもない感じで笑ってた。早く終わってくれ。</p>

<div style="margin-bottom:15px;"><a href="http://booklog.jp/users/kenjiskywalker" target="_blank">kenjiskywalkerの本棚</a> - 2014年12月 (5作品)</div>


<div style="margin-bottom:5px;"><div style="width:75px;height:75px;float:left;margin-right:2px;"><a href="http://booklog.jp/item/1/B00PC2LHAS" target="_blank"><img src="http://ecx.images-amazon.com/images/I/511pkjktdpL._SL75_.jpg" width="50" height="75" alt="" /></a></div><div><a href="http://booklog.jp/item/1/B00PC2LHAS" target="_blank">進撃の巨人（１５）</a><br /><a href="http://booklog.jp/author/%E8%AB%AB%E5%B1%B1%E5%89%B5" target="_blank">諫山創</a><br />読了日：12月13日<br /></div><br style="clear:both;" /></div>


<div style="margin-bottom:5px;"><div style="width:75px;height:75px;float:left;margin-right:2px;"><a href="http://booklog.jp/item/1/B00MRRF3K6" target="_blank"><img src="http://ecx.images-amazon.com/images/I/512kb6uEZSL._SL75_.jpg" width="52" height="75" alt="" /></a></div><div><a href="http://booklog.jp/item/1/B00MRRF3K6" target="_blank">なぜ人と組織は変われないのか ― ハーバード流 自己変革の理論と実践</a><br /><a href="http://booklog.jp/author/%E3%83%AD%E3%83%90%E3%83%BC%E3%83%88%E3%83%BB%E3%82%AD%E3%83%BC%E3%82%AC%E3%83%B3" target="_blank">ロバート・キーガン</a><br />読了日：12月14日<br /></div><br style="clear:both;" /></div>


<div style="margin-bottom:5px;"><div style="width:75px;height:75px;float:left;margin-right:2px;"><a href="http://booklog.jp/item/1/B008DBXFDM" target="_blank"><img src="http://ecx.images-amazon.com/images/I/51HwTkthHsL._SL75_.jpg" width="50" height="75" alt="" /></a></div><div><a href="http://booklog.jp/item/1/B008DBXFDM" target="_blank">賭けの考え方 カジノブックシリーズ</a><br /><a href="http://booklog.jp/author/%E3%82%A4%E3%82%A2%E3%83%B3%E3%83%BB%E3%83%86%E3%82%A4%E3%83%A9%E3%83%BC" target="_blank">イアン・テイラー</a><br />読了日：12月23日<br /></div><br style="clear:both;" /></div>


<div style="margin-bottom:5px;"><div style="width:75px;height:75px;float:left;margin-right:2px;"><a href="http://booklog.jp/item/1/B00PY5YDVI" target="_blank"><img src="http://ecx.images-amazon.com/images/I/51gLU3gWECL._SL75_.jpg" width="56" height="75" alt="" /></a></div><div><a href="http://booklog.jp/item/1/B00PY5YDVI" target="_blank">ForbesJapan (フォーブスジャパン) 2015年 1月号 [雑誌]</a><br /><a href="http://booklog.jp/author/atomixmediaForbesJAPAN%E7%B7%A8%E9%9B%86%E9%83%A8" target="_blank">atomixmediaForbesJAPAN編集部</a><br />読了日：12月28日<br /></div><br style="clear:both;" /></div>


<div style="margin-bottom:5px;"><div style="width:75px;height:75px;float:left;margin-right:2px;"><a href="http://booklog.jp/item/1/4041022835" target="_blank"><img src="http://ecx.images-amazon.com/images/I/51hf%2Bd7f63L._SL75_.jpg" width="52" height="75" alt="" /></a></div><div><a href="http://booklog.jp/item/1/4041022835" target="_blank">多重人格探偵サイコ (21) (カドカワコミックス・エース)</a><br /><a href="http://booklog.jp/author/%E7%94%B0%E5%B3%B6%E6%98%AD%E5%AE%87" target="_blank">田島昭宇</a><br />読了日：12月29日<br /></div><br style="clear:both;" /></div>


<div style="margin:10px 0;font-size:80%;">powered by <a href="http://booklog.jp" target="_blank">booklog</a></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「なぜ人と組織は変われないのか」を読んだ]]></title>
    <link href="http://blog.kenjiskywalker.org/blog/2014/12/14/immunity-of-change/"/>
    <updated>2014-12-14T13:27:00+09:00</updated>
    <id>http://blog.kenjiskywalker.org/blog/2014/12/14/immunity-of-change</id>
    <content type="html"><![CDATA[<p>「なぜ人と組織は変われないのか ― ハーバード流 自己変革の理論と実践」を読んだ。</p>

<div class="booklog_html"><table><tr><td class="booklog_html_image"><a href="http://www.amazon.co.jp/%E3%81%AA%E3%81%9C%E4%BA%BA%E3%81%A8%E7%B5%84%E7%B9%94%E3%81%AF%E5%A4%89%E3%82%8F%E3%82%8C%E3%81%AA%E3%81%84%E3%81%AE%E3%81%8B-%E2%80%95-%E3%83%8F%E3%83%BC%E3%83%90%E3%83%BC%E3%83%89%E6%B5%81-%E8%87%AA%E5%B7%B1%E5%A4%89%E9%9D%A9%E3%81%AE%E7%90%86%E8%AB%96%E3%81%A8%E5%AE%9F%E8%B7%B5-%E3%83%AD%E3%83%90%E3%83%BC%E3%83%88%E3%83%BB%E3%82%AD%E3%83%BC%E3%82%AC%E3%83%B3-ebook/dp/B00MRRF3K6%3FSubscriptionId%3D0AVSM5SVKRWTFMG7ZR82%26tag%3D13nightcrows-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3DB00MRRF3K6" target="_blank"><img src="http://ecx.images-amazon.com/images/I/512kb6uEZSL._SL160_.jpg" width="105" height="150" style="border:0;border-radius:0;" /></a></td><td class="booklog_html_info" style="padding-left:20px;"><div class="booklog_html_title" style="margin-bottom:10px;font-size:14px;font-weight:bold;"><a href="http://www.amazon.co.jp/%E3%81%AA%E3%81%9C%E4%BA%BA%E3%81%A8%E7%B5%84%E7%B9%94%E3%81%AF%E5%A4%89%E3%82%8F%E3%82%8C%E3%81%AA%E3%81%84%E3%81%AE%E3%81%8B-%E2%80%95-%E3%83%8F%E3%83%BC%E3%83%90%E3%83%BC%E3%83%89%E6%B5%81-%E8%87%AA%E5%B7%B1%E5%A4%89%E9%9D%A9%E3%81%AE%E7%90%86%E8%AB%96%E3%81%A8%E5%AE%9F%E8%B7%B5-%E3%83%AD%E3%83%90%E3%83%BC%E3%83%88%E3%83%BB%E3%82%AD%E3%83%BC%E3%82%AC%E3%83%B3-ebook/dp/B00MRRF3K6%3FSubscriptionId%3D0AVSM5SVKRWTFMG7ZR82%26tag%3D13nightcrows-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3DB00MRRF3K6" target="_blank">なぜ人と組織は変われないのか ― ハーバード流 自己変革の理論と実践</a></div><div style="margin-bottom:10px;"><div class="booklog_html_author" style="margin-bottom:15px;font-size:12px;;line-height:1.2em">著者 : <a href="http://booklog.jp/author/%E3%83%AD%E3%83%90%E3%83%BC%E3%83%88%E3%83%BB%E3%82%AD%E3%83%BC%E3%82%AC%E3%83%B3" target="_blank">ロバート・キーガン</a></div><div class="booklog_html_manufacturer" style="margin-bottom:5px;font-size:12px;;line-height:1.2em">英治出版</div><div class="booklog_html_release" style="font-size:12px;;line-height:1.2em">発売日 : 2013-10-24</div></div><div class="booklog_html_link_amazon"><a href="http://booklog.jp/item/1/B00MRRF3K6" style="font-size:12px;" target="_blank">ブクログでレビューを見る»</a></div></td></tr></table></div>


<p>本書のKindle版を読んでいたが、50%付近で速読に変更してざっくりと内容を理解するに留めた。<br/>
しっかり読んで内容を吸収しようとすると相当時間がかかると思う。</p>

<p>何故かというと、この書籍は机上の話ではなく、実際に理論があって<br/>
その理論を実践したユースケースを事細かく書いてあるからだ。</p>

<p>ビジネスマンはこうあるべき、リーダーシップとは、あの人から学ぶ〜<br/>
系のよくある本ではなく</p>

<blockquote><p>&ldquo;なぜ人と組織が硬直(本書では&#8221;変革をはばむ免疫機能&#8221;と表現されている)するのか、<br/>
どうしたら変化していけるのか&rdquo;</p></blockquote>

<p>豊富なシナリオを用いて、課題、実践、結果というサイクルをいくつも<br/>
紹介してくれている。</p>

<p>とても長いですが、年末年始に読む意識高い系の本としておすすめできます。</p>

<h2>個人的なメモ</h2>

<h3>環境順応型知性</h3>

<p>言われたことをきちんとやる・指示者や他部署の人間を敵視する人が多そう</p>

<h3>自己主導型知性</h3>

<p>情報を発信するときに自分が車の運転席に座ろうとするのか、それとも車に乗せて運んでもらおうとするのか</p>

<h3>自己変容型知性</h3>

<p>思い通り目的地に向けて車を走らせるためではなく、道路地図を描き直したり、目的地を修正できる</p>

<p>この3パターンを体系化していたのはとてもわかりやすかった。<br/>
優秀な人は基本的に&#8221;自己主導型知性&#8221;のパターンが多かったけど<br/>
ああ、この人本当に良いな。って思う人はやっぱり&#8221;自己変容型知性&#8221;の人だった。</p>

<p>日常の揉め事は不満から発生することがほとんどで、<br/>
その不満を口に出して自分では何もしない人は&#8221;環境順応型知性&#8221;が多い印象だ。<br/>
というか3パターンの内2パターンは不満や問題があるなら<br/>
解決しようと試みるから当たり前っちゃあ当たり前だ。</p>

<h2>暗黙の関係性</h2>

<p>あの人ってああだから、あのグループはああだから、など<br/>
人数が多ければ多いほどコミュニケーションはしづらくなって<br/>
閉鎖的になったり変化が起こりにくくなったりする。</p>

<p>当事者間の問題なら、腹割って話しましょうよ！とかで<br/>
終わりだけど(そもそも腹割って話せる間柄ならそこまで深刻じゃないよね)<br/>
組織として硬直するのは当事者全員で行わないと、<br/>
本当の改善にはならないと思う。</p>

<p>誰かがリーダーシップを発揮して解決してくれー！！！とか<br/>
おままごとじゃないんだから全員でちゃんとした方が良い。</p>

<h2>実践</h2>

<p>そして風通しの悪い、グループ間の仲が悪い会社を<br/>
どうやって改善していくかみたいなのが事例と共に大量に書いてある。<br/>
本書の半分以上は事例を伴っての実践と結果の振り返りだった。<br/>
<strong>&ldquo;one-big-thing&rdquo;</strong>という一つの焦点に絞って目標を設定するのも面白かった。</p>

<h2>個人の成長と組織の成長が同じベクトルに向いているか</h2>

<p>後半読み飽きてペラペラめくっていく感じで眺めていたが<br/>
個人の成長が組織の成長と同じベクトルを向いているかは<br/>
その人にとっても、組織にとっても重要だと気付かされた。</p>

<p>多分会社に所属していると、ある特定のサイクルで<br/>
&ldquo;面談&#8221;という形でそのサイクルの間どのような目標を持って<br/>
どのような結果を行ったか上司と確認し合う場があるが、</p>

<ul>
<li>会社としての目標</li>
<li>所属しているグループの目標</li>
<li>個人の目標</li>
</ul>


<p>その3点が噛み合うか噛み合わないかで、<br/>
関係するそれぞれの進化のスピードが<br/>
何倍にも変わってくることはまさに目からウロコだった。</p>

<h2>まとめ</h2>

<p>長いけど面白い。<br/>
実践は同じ目標持った人が集まったら試行錯誤しながらできると思う。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[fluentdを利用してsshログインを通知する]]></title>
    <link href="http://blog.kenjiskywalker.org/blog/2014/12/12/login-notification/"/>
    <updated>2014-12-12T22:53:00+09:00</updated>
    <id>http://blog.kenjiskywalker.org/blog/2014/12/12/login-notification</id>
    <content type="html"><![CDATA[<p>sshを利用していると招かれざる客の来訪が多い。<br/>
また、サーバに不必要にログインしている関係者がいないか<br/>
把握しつづけるのも難しい。</p>

<p>今回はfluentdを利用して簡単にログイン周りの通知をSlackに流してみる。</p>

<h2>準備</h2>

<p><code>/var/log/secure</code>はパーミッションが厳しいので<br/>
y-kenさんのブログを参考にパーミッションを変更する必要があります。</p>

<ul>
<li><a href="http://y-ken.hatenablog.com/entry/fluentd-syslog-permission">Fluentdでsyslogを取り込むための権限設定（CentOS 5&amp;6両対応） - Y-Ken Studio</a></li>
</ul>


<p>SlackのAPIがバージョンアップしてリアルタイム性を持つようになった。</p>

<ul>
<li><a href="http://slackhq.com/post/104688116560/rtm-api">A new Slack API: The inevitable rise of the bots Bots</a></li>
</ul>


<p>個人的にはリアルタイム性よりも<br/>
private roomでもhubotが利用できるようになったのいうのがアツい。<br/>
これで色々遊べるようになる。</p>

<ul>
<li><a href="https://github.com/sowawa/fluent-plugin-slack">fluent-plugin-slack</a></li>
</ul>


<p>手元で<code>endpoint</code>を変更して動くようになった。みんな普通に動いているのかな</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>private
</span><span class='line'>def endpoint
</span><span class='line'>  # URI.parse "https://#{@team}.slack.com/services/hooks/incoming-webhook?token=#{@api_key}"
</span><span class='line'>  URI.parse "https://hooks.slack.com/services/XXXXXXXXX/XXXXXXXXX/XXXXXXXXXXXXXXXXXXXXXXXX"
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<p>Real Time Messagingを利用するためには</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>https://slack.com/api/chat.postMessage?token=xoxp-XXXXXXXXXX-XXXXXXXXXX-XXXXXXXXXX-XXXXXX&channel=XXXXXXXXX&text=XXXXX&username=XXXXX'</span></code></pre></td></tr></table></div></figure>


<p>のようにリクエストを送る必要がある。<br/>
時間があればpull requestしたい。(あと20分で書き終えなければ&hellip;)</p>

<p><a href="https://api.slack.com/methods/chat.postMessage">chat.postMessage - slack API</a></p>

<h2>2014/12/16 追記</h2>

<p>sowawaさんにmergeして頂いた。感謝</p>

<h2>設定</h2>

<ul>
<li>/etc/td-agent/td-agent.conf</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;source&gt;
</span><span class='line'>  type tail
</span><span class='line'>  path /var/log/secure
</span><span class='line'>  format syslog
</span><span class='line'>  tag secure_log
</span><span class='line'>  pos_file /var/log/td-agent/syslog_secure.pos
</span><span class='line'>&lt;/source&gt;
</span><span class='line'>
</span><span class='line'>&lt;match secure_log.**&gt;
</span><span class='line'>  type grep
</span><span class='line'>  input_key message
</span><span class='line'>  regexp Accepted|failure|Invalid
</span><span class='line'>  add_tag_prefix greped
</span><span class='line'>&lt;/match&gt;
</span><span class='line'>
</span><span class='line'>&lt;match greped.**&gt;
</span><span class='line'>  type buffered_slack
</span><span class='line'>  api_key API_KEY
</span><span class='line'>  team TEAMNAME
</span><span class='line'>  channel %23general # You should use %23 in return for #
</span><span class='line'>  username fluentd
</span><span class='line'>  color danger
</span><span class='line'>  icon_emoji :shit:
</span><span class='line'>  buffer_path /var/log/td-agent/buffer/
</span><span class='line'>  flush_interval 5s
</span><span class='line'>&lt;/match&gt;</span></code></pre></td></tr></table></div></figure>


<p>こんな感じで<code>Accepted</code>、<code>failure</code>、<code>Invalid</code>の文字列を<br/>
sonotsさんがつくった<a href="https://github.com/sonots/fluent-plugin-grep">fluent-plugin-grep</a>を利用して抽出。</p>

<p>そうすると</p>

<p><img src="http://i.gyazo.com/00260a2b25dfbfb9b55f00eb1b20ca05.png" alt="" /></p>

<p>こんな感じで通知されてくる。セキュリティを気にする環境では<br/>
このような設定を入れておくと良いのではないでしょうか。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[不快な広告と不快ではない広告]]></title>
    <link href="http://blog.kenjiskywalker.org/blog/2014/12/08/koukoku/"/>
    <updated>2014-12-08T21:17:00+09:00</updated>
    <id>http://blog.kenjiskywalker.org/blog/2014/12/08/koukoku</id>
    <content type="html"><![CDATA[<h2>雑記</h2>

<p>youtubeもtwitterの広告も、ただ間に挟んでいるだけで<br/>
普通に不快な印象しかない。不快ではない広告などこの世にあるのか<br/>
って考えたらその広告自体が面白いとか興味があるとかの場合は<br/>
不快ではなかったりする。受け取り手次第な感じもする。</p>

<p>私はサッカーが好きで、いろんなサッカーの話を聞くのが好きなのだが<br/>
南米のサッカー中継のラジオで、得点が入ると、<br/>
ゴールに絡めて広告してくるらしい話が好きだ。どんな感じかというと</p>

<p>ゴールゴルゴルゴルゴール！まるで◯◯社のスプライトのような爽快感！みたいな感じで<br/>
若干無理があるだろうっていう感じでこじつけるらしい。</p>

<p>こういうアイデアのある話は好きだ。<br/>
優秀な人がたくさん在籍しているんだろうし、<br/>
もうちょっと変わった広告の仕方はないのだろうか</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2014/11読んだ本]]></title>
    <link href="http://blog.kenjiskywalker.org/blog/2014/12/07/201411-book/"/>
    <updated>2014-12-07T05:21:00+09:00</updated>
    <id>http://blog.kenjiskywalker.org/blog/2014/12/07/201411-book</id>
    <content type="html"><![CDATA[<p>なんかもうちょっと読んでた気がする&hellip;</p>

<div style="margin-bottom:15px;"><a href="http://booklog.jp/users/kenjiskywalker" target="_blank">kenjiskywalkerの本棚</a> - 2014年11月 (1作品)</div>


<div style="margin-bottom:5px;"><div style="width:75px;height:75px;float:left;margin-right:2px;"><a href="http://booklog.jp/item/1/B00OZY4G6G" target="_blank"><img src="http://ecx.images-amazon.com/images/I/51mueCl2g9L._SL75_.jpg" width="58" height="75" alt="" /></a></div><div><a href="http://booklog.jp/item/1/B00OZY4G6G" target="_blank">& Premium (アンド プレミアム) 2015年 1月号</a><br />読了日：11月24日<br /></div><br style="clear:both;" /></div>


<div style="margin:10px 0;font-size:80%;">powered by <a href="http://booklog.jp" target="_blank">booklog</a></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[俺の子連れおすすめスポット - 新宿御苑]]></title>
    <link href="http://blog.kenjiskywalker.org/blog/2014/12/07/jyoen/"/>
    <updated>2014-12-07T01:49:00+09:00</updated>
    <id>http://blog.kenjiskywalker.org/blog/2014/12/07/jyoen</id>
    <content type="html"><![CDATA[<p><a href="http://www.adventar.org/calendars/681">俺の子連れおすすめスポット Advent Calendar 2014</a></p>

<p><a href="http://www.env.go.jp/garden/shinjukugyoen/">http://www.env.go.jp/garden/shinjukugyoen/</a></p>

<p>新宿御苑をおすすめします。</p>

<ul>
<li>大人（15歳以上）200円　小・中学生50円　幼児無料で安い</li>
<li>新宿駅から歩いていける</li>
<li>無茶苦茶土地が広い</li>
<li>少しオフロードだけどベビーカーでも道が広くてそこそこ整備してあるので余裕で動ける</li>
<li>お弁当持って芝生に寝っ転がって空眺めたりできるので最高</li>
<li>比較的空いているので代々木公園みたいな渋滞は起きない</li>
<li>ペットやお酒、ラジコンや遊び道具の持ち込みが禁止なので平和</li>
</ul>


<p>ということで新宿御苑、お散歩やピクニックにおすすめです。</p>

<blockquote><p>駐車場もあるんですね。初めて知った</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[capistrano3を利用してRails4をdeployしunicornを使う]]></title>
    <link href="http://blog.kenjiskywalker.org/blog/2014/12/02/capistrano3-rails4-unicorn/"/>
    <updated>2014-12-02T23:30:00+09:00</updated>
    <id>http://blog.kenjiskywalker.org/blog/2014/12/02/capistrano3-rails4-unicorn</id>
    <content type="html"><![CDATA[<blockquote><p>Rails v4.1.2<br/>
capistrano v3.3.3</p></blockquote>

<h2>TL;DR</h2>

<p>cap3でrails4のデプロイとbundle install<br/>
unicornの操作をできるようにするまでのメモ</p>

<h3>手元のマシンでcap3をインストール</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ gem install capistrano</span></code></pre></td></tr></table></div></figure>


<p>Railsアプリケーションのあるパスに移動</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cd app_name</span></code></pre></td></tr></table></div></figure>


<h3>cap install</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cap install
</span><span class='line'>mkdir -p config/deploy
</span><span class='line'>create config/deploy.rb
</span><span class='line'>create config/deploy/staging.rb
</span><span class='line'>create config/deploy/production.rb
</span><span class='line'>mkdir -p lib/capistrano/tasks
</span><span class='line'>create Capfile
</span><span class='line'>Capified
</span><span class='line'>$ </span></code></pre></td></tr></table></div></figure>


<p><code>app_name/config</code>配下にdeploy用の各種設定テンプレートが格納され、<br/>
独自rake taskを格納する<code>app_name/lib/capistrano/tasks/</code>ディレクトリが作成され、<br/>
capistrano用の設定ファイル?であるCapfileのひな形が作成される.</p>

<h2>deployの設定</h2>

<h4>config/deploy.rb</h4>

<p>汎用的な設定はここに書くのかな</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>lock '3.3.3'
</span><span class='line'>
</span><span class='line'># 自分のアプリケーション名
</span><span class='line'>set :application, 'app_name'
</span><span class='line'>
</span><span class='line'># 自分のリポジトリ名.capistranoはrsyncではなくgit pullする
</span><span class='line'>set :repo_url, 'git@github.com:kenjiskywalker/app_name.git'
</span><span class='line'>
</span><span class='line'># デプロイ先
</span><span class='line'>set :deploy_to, '/home/foo/app_name'
</span><span class='line'>
</span><span class='line'># cap stage unicorn:start などの実行対象の role . デフォルトは app
</span><span class='line'>set :unicorn_roles, :all
</span><span class='line'>
</span><span class='line'>set :ssh_options, {
</span><span class='line'>
</span><span class='line'># ここのオプションは ssh_config に記載されていれば不要
</span><span class='line'># port: 2222,
</span><span class='line'># keys: [File.expand_path('~/.ssh/hoge.key')],
</span><span class='line'>
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'># ここは cap install するとコメントアウトで入るのでそのコメントアウトを解除
</span><span class='line'>set :linked_dirs, fetch(:linked_dirs, []).push('bin', 'log', 'tmp/pids', 'tmp/cache', 'tmp/sockets', 'vendor/bundle', 'public/system')</span></code></pre></td></tr></table></div></figure>


<h3>config/deploy/stage.rb</h3>

<p>汎用的な設定はdeploy.rbに書き、stage毎の設定はstage.rbに書くのかな</p>

<ul>
<li>config/deploy/development.rb</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># RAILS_ENV の指定
</span><span class='line'>set :rails_env, 'development'
</span><span class='line'>
</span><span class='line'># unicorn で利用する RACK_ENV の指定
</span><span class='line'>set :unicorn_rack_env, 'development'
</span><span class='line'>
</span><span class='line'># ここの user も ssh_config に記載されていれば不要
</span><span class='line'>server 'dev-web1', user: 'foo', roles: %w{web}</span></code></pre></td></tr></table></div></figure>


<ul>
<li>config/deploy/staging.rb</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># RAILS_ENV の指定
</span><span class='line'>set :rails_env, 'staging'
</span><span class='line'>
</span><span class='line'># unicorn で利用する RACK_ENV の指定
</span><span class='line'>set :unicorn_rack_env, 'staging'
</span><span class='line'>
</span><span class='line'># ここの user も ssh_config に記載されていれば不要
</span><span class='line'>server 'stg-web1', user: 'foo', roles: %w{web}</span></code></pre></td></tr></table></div></figure>


<ul>
<li>config/deploy/production.rb</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># RAILS_ENV の指定
</span><span class='line'>set :rails_env, 'production'
</span><span class='line'>
</span><span class='line'># unicorn で利用する RACK_ENV の指定
</span><span class='line'>set :unicorn_rack_env, 'production'
</span><span class='line'>
</span><span class='line'># ここの user も ssh_config に記載されていれば不要
</span><span class='line'>server 'web1', user: 'foo', roles: %w{web}</span></code></pre></td></tr></table></div></figure>


<h3>Gemfile</h3>

<p>capistranoで利用するgemを追加</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>group :development, :staging, :production do
</span><span class='line'>  gem 'capistrano'
</span><span class='line'>  gem 'capistrano-rails'
</span><span class='line'>  gem 'capistrano-rbenv'
</span><span class='line'>  gem 'capistrano-bundler'
</span><span class='line'>  gem 'capistrano3-unicorn'
</span><span class='line'>  gem 'unicorn'
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<h3>Capfile</h3>

<p>consoleとbundlerとunicornを有効化</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Load DSL and Setup Up Stages
</span><span class='line'>require 'capistrano/setup'
</span><span class='line'>
</span><span class='line'># Includes default deployment tasks
</span><span class='line'>require 'capistrano/deploy'
</span><span class='line'>require 'capistrano/console' # cap stage console とかやると便利
</span><span class='line'>
</span><span class='line'># Includes tasks from other gems included in your Gemfile
</span><span class='line'>#
</span><span class='line'># For documentation on these, see for example:
</span><span class='line'>#
</span><span class='line'>#   https://github.com/capistrano/rvm
</span><span class='line'>#   https://github.com/capistrano/rbenv
</span><span class='line'>#   https://github.com/capistrano/chruby
</span><span class='line'>#   https://github.com/capistrano/bundler
</span><span class='line'>#   https://github.com/capistrano/rails
</span><span class='line'>#
</span><span class='line'># require 'capistrano/rvm'
</span><span class='line'># require 'capistrano/rbenv'
</span><span class='line'># require 'capistrano/chruby'
</span><span class='line'>require 'capistrano/bundler' # deploy:updated の前に bundle install してくれる
</span><span class='line'>require 'capistrano3/unicorn' # cap3で unicorn を操作できるようにしてくれる
</span><span class='line'># require 'capistrano/rails/assets'
</span><span class='line'># require 'capistrano/rails/migrations'
</span><span class='line'>
</span><span class='line'># Loads custom tasks from `lib/capistrano/tasks' if you have any defined.
</span><span class='line'>Dir.glob('lib/capistrano/tasks/*.rake').each { |r| import r }</span></code></pre></td></tr></table></div></figure>


<h3>config/unicorn/stage.rb</h3>

<p><a href="https://github.com/tablexi/capistrano3-unicorn/blob/master/lib/capistrano3/tasks/unicorn.rake#L4">:unicorn_config_path</a> を参考にすると<br/>
<code>config/unicorn.rb</code>ではなく<code>config/unicorn/satge.rb</code>を記載する</p>

<p>unicorn 設定例 : <a href="https://github.com/tablexi/capistrano3-unicorn/blob/master/examples/unicorn.rb">example.rb</a></p>

<p>上記設定例を参考に設定.取り敢えず変更箇所は<code>app_path</code>ぐらい</p>

<ul>
<li>config/unicorn/stage.rb</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># paths
</span><span class='line'>app_path = "/home/foo/app_name"
</span><span class='line'>working_directory "#{app_path}/current"
</span><span class='line'>pid               "#{app_path}/current/tmp/pids/unicorn.pid"
</span><span class='line'>
</span><span class='line'># listen
</span><span class='line'>listen "/tmp/hoge-api.socket", :backlog =&gt; 64
</span><span class='line'>
</span><span class='line'># logging
</span><span class='line'>stderr_path "log/unicorn.stderr.log"
</span><span class='line'>stdout_path "log/unicorn.stdout.log"
</span><span class='line'>
</span><span class='line'># workers
</span><span class='line'>worker_processes 3
</span><span class='line'>
</span><span class='line'># use correct Gemfile on restarts
</span><span class='line'>before_exec do |server|
</span><span class='line'>  ENV['BUNDLE_GEMFILE'] = "#{app_path}/current/Gemfile"
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'># preload
</span><span class='line'>preload_app true
</span><span class='line'>
</span><span class='line'>before_fork do |server, worker|
</span><span class='line'>  # the following is highly recomended for Rails + "preload_app true"
</span><span class='line'>  # as there's no need for the master process to hold a connection
</span><span class='line'>  if defined?(ActiveRecord::Base)
</span><span class='line'>    ActiveRecord::Base.connection.disconnect!
</span><span class='line'>  end
</span><span class='line'>
</span><span class='line'>  # Before forking, kill the master process that belongs to the .oldbin PID.
</span><span class='line'>  # This enables 0 downtime deploys.
</span><span class='line'>  old_pid = "#{server.config[:pid]}.oldbin"
</span><span class='line'>  if File.exists?(old_pid) && server.pid != old_pid
</span><span class='line'>    begin
</span><span class='line'>      Process.kill("QUIT", File.read(old_pid).to_i)
</span><span class='line'>    rescue Errno::ENOENT, Errno::ESRCH
</span><span class='line'>      # someone else did our job for us
</span><span class='line'>    end
</span><span class='line'>  end
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>after_fork do |server, worker|
</span><span class='line'>  if defined?(ActiveRecord::Base)
</span><span class='line'>    ActiveRecord::Base.establish_connection
</span><span class='line'>  end
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<h2>動作チェック</h2>

<h3>deploy</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ bundle exec cap development deploy:check
</span><span class='line'>$ bundle exec cap development deploy
</span><span class='line'>$ bundle exec cap staging deploy
</span><span class='line'>$ bundle exec cap production deploy</span></code></pre></td></tr></table></div></figure>


<h3>unicorn</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ bundle exec cap development unicorn:start
</span><span class='line'>$ bundle exec cap development unicorn:legacy_restart
</span><span class='line'>$ bundle exec cap development unicorn:stop</span></code></pre></td></tr></table></div></figure>


<h3>学び</h3>

<p>rsyncではなくgit pullなので混乱することがある.<br/>
currentやrelease, sharedなど見たらわかる面白構造.<br/>
当たり前だけど上手くいかない時は手を動かすよりドキュメントとコードを読んだ方が早い.</p>

<p>以上簡単なメモです.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ansible Vaultで暗号化されたファイルをCircleCIで利用する]]></title>
    <link href="http://blog.kenjiskywalker.org/blog/2014/11/17/ansible-vault-circleci/"/>
    <updated>2014-11-17T14:08:00+09:00</updated>
    <id>http://blog.kenjiskywalker.org/blog/2014/11/17/ansible-vault-circleci</id>
    <content type="html"><![CDATA[<h2>TL;DR</h2>

<p>CircleCIのEnvironment variablesを利用して<br/>
ファイルにdecryptのパスワードを記入する</p>

<h2>設定</h2>

<ul>
<li><a href="https://circleci.com/docs/environment-variables">Environment variables - CircleCI</a></li>
<li><a href="http://docs.ansible.com/playbooks_vault.html">Vault - Ansible</a></li>
</ul>


<p>CircleCIの環境変数に値を設定する機能を利用し、<br/>
テスト実行前にその環境変数に設定したVault用の<br/>
パスワードをファイルに出力しておき、ansible実行時には<br/>
そのファイルを見に行くようにする。</p>

<ul>
<li>circle.yml</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>machine:
</span><span class='line'>  services:
</span><span class='line'>    - docker
</span><span class='line'>
</span><span class='line'>dependencies:
</span><span class='line'>  pre:
</span><span class='line'>    - if [[ -e docker_ansible_image.tar ]]; then cat docker_ansible_image.tar | docker import - kenjiskywalker/dockerfile-centos-ansible ; docker load --input docker_ansible_image.tar ; else docker build . ; docker save -o docker_ansible_image.tar kenjiskywalker/dockerfile-centos-ansible ; fi
</span><span class='line'>    - echo "${ANSIBLE_VAULT}" &gt; $(pwd)/ansible/vault.txt
</span><span class='line'>
</span><span class='line'>  cache_directories:
</span><span class='line'>    - "docker_ansible_image.tar"
</span><span class='line'>
</span><span class='line'>test:
</span><span class='line'>  post:
</span><span class='line'>    - docker run -v $(pwd)/ansible:/ansible kenjiskywalker/dockerfile-centos-ansible ansible-playbook /ansible/ci.yml  --vault-password-file /ansible/vault.txt -i /ansible/inventory_localhost -c local</span></code></pre></td></tr></table></div></figure>


<p>他に良いプラクティスあれば教えてください。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CircleCIでDockerコンテナに対してansibleを実行しserverspecでテストをする]]></title>
    <link href="http://blog.kenjiskywalker.org/blog/2014/11/13/circleci-docker-ansible-serverspec/"/>
    <updated>2014-11-13T21:11:00+09:00</updated>
    <id>http://blog.kenjiskywalker.org/blog/2014/11/13/circleci-docker-ansible-serverspec</id>
    <content type="html"><![CDATA[<h3>参考</h3>

<p><a href="https://speakerdeck.com/naoya/kaizen-platform-inc-niokeruyun-yong-zi-dong-hua">KAIZEN platform Inc. における運用自動化 - Speaker Deck</a><br/>
<a href="https://circleci.com/docs/docker">Continous Integration and Delivery with Docker - CircleCI</a></p>

<h2>TL;DR</h2>

<p>CircleCI上でDockerコンテナを立て、<br/>
そのコンテナに対してプロビジョニングを行い、<br/>
プロビジョニング後のコンテナに対してテストを行う</p>

<h2>DockerコンテナにAnsibleを実行する</h2>

<p>コミットする度にDockerのimageをpullするのは時間がもったいないので<br/>
<code>cache_directories</code>を利用し、imageをexportしておき<br/>
実行時にimportするようにすると多少速くなる。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.
</span><span class='line'>├── Dockerfile
</span><span class='line'>├── ansible/
</span><span class='line'>└── circle.yml</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Dockerfile</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>FROM kenjiskywalker/dockerfile-centos-ansible</span></code></pre></td></tr></table></div></figure>


<ul>
<li>circle.yml</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>machine:
</span><span class='line'>  services:
</span><span class='line'>    - docker
</span><span class='line'>
</span><span class='line'>dependencies:
</span><span class='line'>  pre:
</span><span class='line'>    - if [[ -e docker_ansible_image.tar ]]; then cat docker_ansible_image.tar | docker import - kenjiskywalker/dockerfile-centos-ansible ; docker load --input docker_ansible_image.tar ; else docker build . ; docker save -o docker_ansible_image.tar kenjiskywalker/dockerfile-centos-ansible ; fi
</span><span class='line'>
</span><span class='line'>  cache_directories:
</span><span class='line'>    - "docker_ansible_image.tar"
</span><span class='line'>
</span><span class='line'>test:
</span><span class='line'>  post:
</span><span class='line'>    - docker run -v `pwd`/ansible:/ansible kenjiskywalker/dockerfile-centos-ansible ansible-playbook /ansible/ci.yml -i /ansible/inventory_localhost -c local</span></code></pre></td></tr></table></div></figure>


<p>こんな感じの設定ファイルを置いておくと<code>ansible</code>ディレクトリをマウントし<br/>
Dockerコンテナがansibleを実行できる状態であればDockerコンテナに対して<br/>
ansibleが実行できる。この続きにServerspecを記述することで</p>

<ol>
<li>リポジトリにansibleのファイルをコミットする</li>
<li>CircleCI上にてDockerコンテナを起動</li>
<li>Dockerコンテナに対してansibleでプロビジョニング</li>
<li>そのプロビジョニング結果をServerspecでテストをする</li>
</ol>


<p>のようなことができる。</p>

<h2>wercker</h2>

<p>werckerでも同じようなことができる。<br/>
CircleCIと同様にファイルをキャッシュするには<br/>
<code>$WERCKER_CACHE_DIR</code>を利用すればよいかと。</p>

<ul>
<li>wercker.yml</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>box: wercker-labs/docker
</span><span class='line'>build:
</span><span class='line'>  steps:
</span><span class='line'>    - script:
</span><span class='line'>        name: docker build
</span><span class='line'>        code: docker build .
</span><span class='line'>    - script:
</span><span class='line'>        name: docker run
</span><span class='line'>        code: docker run -v `pwd`/ansible:/ansible dockerfile/ansible ansible-playbook /ansible/ci.yml -i /ansible/inventory_localhost -c local</span></code></pre></td></tr></table></div></figure>


<p>以上、メモです。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[シェルスクリプトで外部コマンドを利用する場合の注意点]]></title>
    <link href="http://blog.kenjiskywalker.org/blog/2014/11/10/shellscript-old-style/"/>
    <updated>2014-11-10T15:37:00+09:00</updated>
    <id>http://blog.kenjiskywalker.org/blog/2014/11/10/shellscript-old-style</id>
    <content type="html"><![CDATA[<h2>TL;DR</h2>

<p>シェルスクリプトでbackquoteを見つけたら<br/>
オールドスタイルおじさんを探し、矯正させよう</p>

<blockquote><p>GNU Bash-2.05 manual</p></blockquote>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>   When the old-style backquote form of substitution is used, backslash retains its  lit-  
</span><span class='line'>   eral  meaning except when followed by $, `, or \.  The first backquote not preceded by  
</span><span class='line'>   a backslash terminates the command substitution.  When using the $(command) form,  all  
</span><span class='line'>   characters between the parentheses make up the command; none are treated specially.</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>
</span><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>
</span><span class='line'><span class="nv">a</span><span class="o">=</span><span class="sb">`</span><span class="nb">echo</span> <span class="s1">&#39;\&#39;`</span>
</span><span class='line'><span class="s1">echo ${a} # \</span>
</span><span class='line'>
</span><span class='line'><span class="s1">b=`echo &quot;\\&quot;`</span>
</span><span class='line'><span class="s1">echo ${b} # unexpected EOF while looking for matching `&quot;&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">c</span><span class="o">=</span><span class="k">$(</span><span class="nb">echo</span> <span class="err">&#39;</span><span class="se">\&#39;</span><span class="k">)</span>
</span><span class='line'><span class="nb">echo</span> <span class="k">${</span><span class="nv">c</span><span class="k">}</span> <span class="c"># \</span>
</span><span class='line'>
</span><span class='line'><span class="nv">d</span><span class="o">=</span><span class="k">$(</span><span class="nb">echo</span> <span class="s2">&quot;\\&quot;</span><span class="k">)</span>
</span><span class='line'><span class="nb">echo</span> <span class="k">${</span><span class="nv">d</span><span class="k">}</span> <span class="c"># \</span>
</span></code></pre></td></tr></table></div></figure>


<h2>参考</h2>

<p><a href="http://hyperpolyglot.org/unix-shells#cmd-subst-note">http://hyperpolyglot.org/unix-shells#cmd-subst-note</a></p>

<h2>追記</h2>

<blockquote class="twitter-tweet" lang="en"><p>csh系では動かないのでは？というご意見を頂いておりますが、csh系を利用されている方は基本的に強い意思を持って取り組まれているかと存じますので、わざわざ説明することはないと判断しております</p>&mdash; kenjiskywalker (@kenjiskywalker) <a href="https://twitter.com/kenjiskywalker/status/531709951777857536">November 10, 2014</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2014/10読んだ本]]></title>
    <link href="http://blog.kenjiskywalker.org/blog/2014/11/02/201410-book/"/>
    <updated>2014-11-02T01:59:00+09:00</updated>
    <id>http://blog.kenjiskywalker.org/blog/2014/11/02/201410-book</id>
    <content type="html"><![CDATA[<p>太平記、いよいよ尊氏がのし上がってきた。</p>

<div style="margin-bottom:15px;"><a href="http://booklog.jp/users/kenjiskywalker" target="_blank">kenjiskywalkerの本棚</a> - 2014年10月 (7作品)</div>


<div style="margin-bottom:5px;"><div style="width:75px;height:75px;float:left;margin-right:2px;"><a href="http://booklog.jp/item/1/4061592998" target="_blank"><img src="http://ecx.images-amazon.com/images/I/41Z7F36DYDL._SL75_.jpg" width="53" height="75" alt="" /></a></div><div><a href="http://booklog.jp/item/1/4061592998" target="_blank">本を読む本 (講談社学術文庫)</a><br /><a href="http://booklog.jp/author/J%E3%83%BB%E3%83%A2%E3%83%BC%E3%83%86%E3%82%A3%E3%83%9E%E3%83%BC%E3%83%BB%E3%82%A2%E3%83%89%E3%83%A9%E3%83%BC" target="_blank">J・モーティマー・アドラー</a><br />読了日：10月10日<br /></div><br style="clear:both;" /></div>


<div style="margin-bottom:5px;"><div style="width:75px;height:75px;float:left;margin-right:2px;"><a href="http://booklog.jp/item/1/B00G3QYKEM" target="_blank"><img src="http://ecx.images-amazon.com/images/I/51bjX8kwqEL._SL75_.jpg" width="50" height="75" alt="" /></a></div><div><a href="http://booklog.jp/item/1/B00G3QYKEM" target="_blank">私本太平記 07 千早帖</a><br /><a href="http://booklog.jp/author/%E5%90%89%E5%B7%9D%E8%8B%B1%E6%B2%BB" target="_blank">吉川英治</a><br />読了日：10月10日<br /></div><br style="clear:both;" /></div>


<div style="margin-bottom:5px;"><div style="width:75px;height:75px;float:left;margin-right:2px;"><a href="http://booklog.jp/item/1/4063883817" target="_blank"><img src="http://ecx.images-amazon.com/images/I/61roFPa3QIL._SL75_.jpg" width="53" height="75" alt="" /></a></div><div><a href="http://booklog.jp/item/1/4063883817" target="_blank">GIANT KILLING(33) (モーニング KC)</a><br /><a href="http://booklog.jp/author/%E3%83%84%E3%82%B8%E3%83%88%E3%83%A2" target="_blank">ツジトモ</a><br />読了日：10月26日<br /></div><br style="clear:both;" /></div>


<div style="margin-bottom:5px;"><div style="width:75px;height:75px;float:left;margin-right:2px;"><a href="http://booklog.jp/item/1/B00G3R04NC" target="_blank"><img src="http://ecx.images-amazon.com/images/I/51kD3wswI8L._SL75_.jpg" width="50" height="75" alt="" /></a></div><div><a href="http://booklog.jp/item/1/B00G3R04NC" target="_blank">私本太平記 08 新田帖</a><br /><a href="http://booklog.jp/author/%E5%90%89%E5%B7%9D%E8%8B%B1%E6%B2%BB" target="_blank">吉川英治</a><br />読了日：10月26日<br /></div><br style="clear:both;" /></div>


<div style="margin-bottom:5px;"><div style="width:75px;height:75px;float:left;margin-right:2px;"><a href="http://booklog.jp/item/1/B00G3R1M2E" target="_blank"><img src="http://ecx.images-amazon.com/images/I/51QdHojEjuL._SL75_.jpg" width="50" height="75" alt="" /></a></div><div><a href="http://booklog.jp/item/1/B00G3R1M2E" target="_blank">私本太平記 09 建武らくがき帖</a><br /><a href="http://booklog.jp/author/%E5%90%89%E5%B7%9D%E8%8B%B1%E6%B2%BB" target="_blank">吉川英治</a><br />読了日：10月26日<br /></div><br style="clear:both;" /></div>


<div style="margin-bottom:5px;"><div style="width:75px;height:75px;float:left;margin-right:2px;"><a href="http://booklog.jp/item/1/4774167681" target="_blank"><img src="http://ecx.images-amazon.com/images/I/61FyzLfkvnL._SL75_.jpg" width="53" height="75" alt="" /></a></div><div><a href="http://booklog.jp/item/1/4774167681" target="_blank">サーバ/インフラ徹底攻略 (WEB+DB PRESS plus)</a><br /><a href="http://booklog.jp/author/%E4%BC%8A%E8%97%A4%E7%9B%B4%E4%B9%9F" target="_blank">伊藤直也</a><br />読了日：10月26日<br /></div><br style="clear:both;" /></div>


<div style="margin-bottom:5px;"><div style="width:75px;height:75px;float:left;margin-right:2px;"><a href="http://booklog.jp/item/1/B00NFW7RCY" target="_blank"><img src="http://ecx.images-amazon.com/images/I/619ts5KepqL._SL75_.jpg" width="52" height="75" alt="" /></a></div><div><a href="http://booklog.jp/item/1/B00NFW7RCY" target="_blank">高校サッカーダイジェスト Vol.7 2014年 11/1号 [雑誌]</a><br />読了日：10月27日<br /></div><br style="clear:both;" /></div>


<div style="margin:10px 0;font-size:80%;">powered by <a href="http://booklog.jp" target="_blank">booklog</a></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「サーバ/インフラ徹底攻略」を読んだ]]></title>
    <link href="http://blog.kenjiskywalker.org/blog/2014/10/26/server-infra-webdb-book/"/>
    <updated>2014-10-26T18:05:00+09:00</updated>
    <id>http://blog.kenjiskywalker.org/blog/2014/10/26/server-infra-webdb-book</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/%E3%82%B5%E3%83%BC%E3%83%90-%E3%82%A4%E3%83%B3%E3%83%95%E3%83%A9%E5%BE%B9%E5%BA%95%E6%94%BB%E7%95%A5-WEB-PRESS-plus/dp/4774167681%3FSubscriptionId%3D0AVSM5SVKRWTFMG7ZR82%26tag%3D13nightcrows-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4774167681" target="_blank" title="サーバ/インフラ徹底攻略 (WEB+DB PRESS plus)"><img src="http://ecx.images-amazon.com/images/I/61FyzLfkvnL.jpg" width="354" height="500" alt="サーバ/インフラ徹底攻略 (WEB+DB PRESS plus)" /></a></p>

<p><a href="http://www.amazon.co.jp/%E3%82%B5%E3%83%BC%E3%83%90-%E3%82%A4%E3%83%B3%E3%83%95%E3%83%A9%E5%BE%B9%E5%BA%95%E6%94%BB%E7%95%A5-WEB-PRESS-plus/dp/4774167681%3FSubscriptionId%3D0AVSM5SVKRWTFMG7ZR82%26tag%3D13nightcrows-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4774167681" target="_blank">サーバ/インフラ徹底攻略 (WEB+DB PRESS plus)</a></p>

<p>ご恵贈ありがとうございます！</p>

<h2>TL;DR</h2>

<p>mizzyさんのServerspecを利用したインフラCIの章、<br/>
サイバーエージェント社のメンテナンスの章は最高だった</p>

<h2>もくじ</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>巻頭企画
</span><span class='line'>［入門］コードによるインフラ構築
</span><span class='line'>サーバ構成管理の自動化を実現する
</span><span class='line'>
</span><span class='line'>第1章：ChefとVagrantによるインフラのコード化
</span><span class='line'>設定の一元管理で作業を省力化する……伊藤 直也
</span><span class='line'>第2章：Serverspecによるテスト駆動インフラ構築
</span><span class='line'>設定変更の反映を確実なものにする……伊藤 直也
</span><span class='line'>特集1
</span><span class='line'>Amazon Web Services最新活用
</span><span class='line'>レイヤ別比較，構築の定石，構成管理の自動化
</span><span class='line'>
</span><span class='line'>第1章：Amazon Web Servicesレイヤ別比較
</span><span class='line'>各サービスの特徴を理解し，うまく使い分ける……片山 暁雄，平山 毅
</span><span class='line'>第2章：EC2とVPCによるシステム構築
</span><span class='line'>セキュアで可用性を高めたインフラの作り方……舟崎 健治，吉荒 祐一
</span><span class='line'>第3章：RDSによるデータベースの活用
</span><span class='line'>作成，デプロイ，バックアップ……今井 雄太，八木橋 徹平
</span><span class='line'>第4章：CloudFormationによる構築の自動化
</span><span class='line'>テンプレートの作成からミドルウェア構築設定まで……安川 健太
</span><span class='line'>特集2
</span><span class='line'>テスト駆動インフラ＆CI最前線
</span><span class='line'>Infrastructure as Codeがもたらすワークフローの刷新
</span><span class='line'>
</span><span class='line'>第1章：インフラのテストとその重要性
</span><span class='line'>「インフラのコード化」による開発手法の応用……宮下 剛輔
</span><span class='line'>第2章：テスト駆動インフラの実践
</span><span class='line'>VirtualBox，Vagrant，Puppet，Serverspecによるテスト自動化……宮下 剛輔
</span><span class='line'>第3章：インフラCIの実践
</span><span class='line'>GitHub，Wercker，DigitalOceanによる継続的テスト……宮下 剛輔
</span><span class='line'>第4章：インフラの継続的改善の実践
</span><span class='line'>GitHub Flowをベースとしたワークフロー変革……宮下 剛輔
</span><span class='line'>特集3
</span><span class='line'>実践Immutable Infrastructure
</span><span class='line'>使い捨てサーバによる運用の変革
</span><span class='line'>
</span><span class='line'>第1章：Immutable Infrastructureとは何か
</span><span class='line'>不変なサーバ，Blue-green Deploymentとそれらの利点……田中 慎司
</span><span class='line'>第2章：Immutable Infrastructureで利用するツール／サービス
</span><span class='line'>比較・整理と，システム全体での組み合わせ……田中 慎司
</span><span class='line'>第3章：コンテナ型仮想化とクラウドによる実践
</span><span class='line'>Docker+HAProxy，Amazon EC2+ELB……田中 慎司
</span><span class='line'>第4章：クラスタ管理ツールによる実践
</span><span class='line'>Apache Mesosでリソース管理の自動化……田中 慎司
</span><span class='line'>特集4
</span><span class='line'>［詳解］nginx
</span><span class='line'>設定の柔軟性と優れたスケーラビリティ
</span><span class='line'>
</span><span class='line'>第1章：nginxの世界へようこそ
</span><span class='line'>アーキテクチャ，用途，メリット，デメリット……久保 達彦
</span><span class='line'>第2章：はじめてのnginx
</span><span class='line'>インストール，起動と終了，基本設定……道井 俊介
</span><span class='line'>第3章：一般的なWebサーバの構築
</span><span class='line'>バーチャルホスト，アクセス制御，SSL通信，基本認証……飯田 祐基
</span><span class='line'>第4章：実践的なWebアプリケーションサーバの構築
</span><span class='line'>Unicorn/RailsやPHP-FPMと連携させる……道井 俊介
</span><span class='line'>第5章：大規模コンテンツ配信システムの構築
</span><span class='line'>キャッシュ，ロードバランシングを活用する……飯田 祐基
</span><span class='line'>第6章：拡張モジュールのしくみと作り方
</span><span class='line'>nginxを自由にカスタマイズするための基礎知識……久保 達彦
</span><span class='line'>特集5
</span><span class='line'>メンテナンス本格入門
</span><span class='line'>緊急対応，計画停止，メンテフリー化
</span><span class='line'>
</span><span class='line'>第1章：メンテナンスとは
</span><span class='line'>種類と手法を整理する……桑野 章弘
</span><span class='line'>第2章：計画メンテナンスの流れ
</span><span class='line'>事前準備，作業のチェック，振り返り……松浦 隼人
</span><span class='line'>第3章：緊急メンテナンスの流れ
</span><span class='line'>普段から備えるべきこと，障害時の対応……松浦 隼人
</span><span class='line'>第4章：メンテフリーへのアプローチ【インフラ編】
</span><span class='line'>省力運用を実現するインフラ，データベース設計と障害検知……松浦 隼人，中村 俊之
</span><span class='line'>第5章：メンテフリーへのアプローチ【アプリケーション編】
</span><span class='line'>ダウンタイムを減らすリリース手法とアプリケーション設計……福永 亘，中村 俊之，松浦 隼人
</span><span class='line'>第6章：ガールフレンド（仮）とアメーバピグの事例
</span><span class='line'>現場でどう実践し，どう障害を切り抜けたか……福永 亘，杉山 仁則
</span><span class='line'>一般記事
</span><span class='line'>
</span><span class='line'>Dockerで軽量な仮想環境
</span><span class='line'>Linuxコンテナでインフラを瞬時に構築する……伊藤 直也</span></code></pre></td></tr></table></div></figure>


<h2>感想</h2>

<h3>なおやさんの章</h3>

<p>Vagrant、Chef、Serverspecなどを利用したことのない人が<br/>
手元でひと通り読みながら進めるとインフラのコード化を実感できる.</p>

<h3>AWSさんの章</h3>

<p>Amazon Web Servicesの章はひと通りのサービスの説明と<br/>
実際にアプリケーションを動かす例が記載されている.<br/>
これを読めばいきなりAWSを駆使できるかと言われればNoだが<br/>
AWS全体のサービスを把握するのに良さそう.</p>

<h3>mizzyさんの章</h3>

<p>mizzyさんの章はServerspecの作者であるmizzyさんご自身の<br/>
Serverspecの活用方法で、実際に<a href="https://www.digitalocean.com/">DigitalOcean</a>と<a href="http://wercker.com/">wercker</a>を利用して<br/>
手を動かしながら、インフラのCIを体験することができる.<br/>
利用しているサービスも、DigitalOceanは一般的なインスタンスでも<br/>
1時間に1.6円(2014/10現在)で利用でき、<br/>
werckerはまだ無料の(2014/10現在)CIサービスなのでとても簡単に始めることができる.</p>

<p>導入だけでなく<a href="http://scottchacon.com/2011/08/31/github-flow.html">GitHub Flow</a>を利用してどのように運用するかまで載っているので<br/>
インフラのCIインフラのCIって最近よく聞くけどどうやったらいいんだ.<br/>
という私と同じようなエンジニアにとっては大変ありがたい章だ.<br/>
全体のデザインのモチーフが宇宙観があって最高だった.</p>

<h3>stanakaさんの章</h3>

<p>先ほどのmizzyさんの章のモチーフが宇宙だったのに比べ、stanakaさんの章は神社だ.<br/>
Immutable Infrastructureをどのように実践するかの具体的な内容が記載されている.<br/>
はてな社はこの環境でプロダクトのサービスが動いているのだろうか.すごい.</p>

<h3>nginxの章</h3>

<p>nginxについて色々な内容が書いてあった.<br/>
本書の全体の構成の中で、nginxだけを扱うというスコープが<br/>
他の章と比べると少し変な感じがした.</p>

<h3>メンテナンスの章</h3>

<p>サイバーエージェント社の存在するサービスに対して<br/>
どのようにメンテナンス作業を行っているのかという社外に出てこないような知見を<br/>
このように書籍として読めるのは本当に貴重だと思う.</p>

<p>ウェブサービス業界のサーバサイドの勉強会はかなり多く開催されているが、<br/>
このような泥臭いというか、目新しくはないけど<br/>
確実に行わなければならない企業毎の知見みたいなものを共有していく重要性を<br/>
改めて考えさせられた章だった.ありがたい</p>

<h3>Dockerの章</h3>

<p>Vagrant + Dockerの基本的な内容が記載されている.<br/>
とりあえずどんなものか知るのに良さそう.</p>

<h2>まとめ</h2>

<p>職人がサーバひとつひとつ温もりを持って構築している職場を改善したい人や、<br/>
大企業でメンテナンス作業がどう行われているのか知りたいエンジニア、<br/>
インフラのコード化、インフラのCI、AWSなどざざっと把握してみたい人には良いと思う.</p>
]]></content>
  </entry>
  
</feed>
